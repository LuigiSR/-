

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Apr 06 11:02:36 2022

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     	FNCALL	_main,_lcd_init
  1024                           	FNCALL	_main,_lcd_print
  1025                           	FNCALL	_main,_stepmotor
  1026                           	FNCALL	_main,_stepmotor_init
  1027                           	FNCALL	_main,_teclado
  1028                           	FNCALL	_main,_teclado_init
  1029                           	FNCALL	_stepmotor,___bmul
  1030                           	FNCALL	_stepmotor,___lldiv
  1031                           	FNCALL	_stepmotor,___lmul
  1032                           	FNCALL	_stepmotor,_delay
  1033                           	FNCALL	_lcd_print,_lcd_dataReg
  1034                           	FNCALL	_lcd_print,_lcd_lincol
  1035                           	FNCALL	_lcd_lincol,_lcd_instReg
  1036                           	FNCALL	_lcd_init,_delay
  1037                           	FNCALL	_lcd_init,_lcd_instReg
  1038                           	FNROOT	_main
  1039                           	global	_motor
  1040                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1041                           global __pidataBANK0
  1042                           __pidataBANK0:
  1043  03D5                     	file	"stepmotor.c"
  1044                           	line	14
  1045                           
  1046                           ;initializer for _motor
  1047                           	retlw	04h
  1048  03D5  3404               	retlw	06h
  1049  03D6  3406               	retlw	02h
  1050  03D7  3402               	retlw	03h
  1051  03D8  3403               	retlw	01h
  1052  03D9  3401               	retlw	09h
  1053  03DA  3409               	retlw	08h
  1054  03DB  3408               	retlw	0Ch
  1055  03DC  340C               	global	_tecladoMatriz
  1056                           psect	strings,class=STRING,delta=2,noexec
  1057                           global __pstrings
  1058                           __pstrings:
  1059  0003                     stringtab:
  1060  0003                     	global    __stringtab
  1061                           __stringtab:
  1062  0003                     ;	String table - string pointers are 1 byte each
  1063                           stringcode:stringdir:
  1064  0003                     movlw high(stringdir)
      + 0003                     stringdir:	
  1065  0003  3000               movwf pclath
  1066  0004  008A               movf fsr,w
  1067  0005  0804               incf fsr
  1068  0006  0A84               	addwf pc
  1069  0007  0782               	global __stringbase
  1070                           __stringbase:
  1071  0008                     	retlw	0
  1072  0008  3400               psect	strings
  1073                           	global    __end_of__stringtab
  1074                           __end_of__stringtab:
  1075  0009                     	file	"teclado.c"
  1076                           	line	18
  1077                           _tecladoMatriz:
  1078  0009                     	retlw	031h
  1079  0009  3431               	retlw	032h
  1080  000A  3432               	retlw	033h
  1081  000B  3433               	retlw	041h
  1082  000C  3441               	retlw	034h
  1083  000D  3434               	retlw	035h
  1084  000E  3435               	retlw	036h
  1085  000F  3436               	retlw	042h
  1086  0010  3442               	retlw	037h
  1087  0011  3437               	retlw	038h
  1088  0012  3438               	retlw	039h
  1089  0013  3439               	retlw	043h
  1090  0014  3443               	retlw	02Ah
  1091  0015  342A               	retlw	030h
  1092  0016  3430               	retlw	023h
  1093  0017  3423               	retlw	044h
  1094  0018  3444               	global __end_of_tecladoMatriz
  1095                           __end_of_tecladoMatriz:
  1096  0019                     	global	_tecladoMatriz
  1097                           	global	_contador_passos
  1098                           	global	_ppr
  1099                           	global	_passo
  1100                           	global	_PORTCbits
  1101                           _PORTCbits	set	0x7
  1102  0007                     	global	_PORTB
  1103                           _PORTB	set	0x6
  1104  0006                     	global	_PORTD
  1105                           _PORTD	set	0x8
  1106  0008                     	global	_PORTDbits
  1107                           _PORTDbits	set	0x8
  1108  0008                     	global	_TRISCbits
  1109                           _TRISCbits	set	0x87
  1110  0087                     	global	_WPUB
  1111                           _WPUB	set	0x95
  1112  0095                     	global	_OPTION_REGbits
  1113                           _OPTION_REGbits	set	0x81
  1114  0081                     	global	_TRISB
  1115                           _TRISB	set	0x86
  1116  0086                     	global	_TRISDbits
  1117                           _TRISDbits	set	0x88
  1118  0088                     	global	_ANSELH
  1119                           _ANSELH	set	0x189
  1120  0189                     	
  1121                           STR_1:	
  1122  0019                     	retlw	109	;'m'
  1123  0019  346D               	retlw	111	;'o'
  1124  001A  346F               	retlw	116	;'t'
  1125  001B  3474               	retlw	111	;'o'
  1126  001C  346F               	retlw	114	;'r'
  1127  001D  3472               	retlw	32	;' '
  1128  001E  3420               	retlw	100	;'d'
  1129  001F  3464               	retlw	101	;'e'
  1130  0020  3465               	retlw	32	;' '
  1131  0021  3420               	retlw	112	;'p'
  1132  0022  3470               	retlw	97	;'a'
  1133  0023  3461               	retlw	115	;'s'
  1134  0024  3473               	retlw	115	;'s'
  1135  0025  3473               	retlw	111	;'o'
  1136  0026  346F               	retlw	115	;'s'
  1137  0027  3473               	retlw	0
  1138  0028  3400               psect	strings
  1139                           	
  1140                           STR_2:	
  1141  0029                     	retlw	115	;'s'
  1142  0029  3473               	retlw	116	;'t'
  1143  002A  3474               	retlw	101	;'e'
  1144  002B  3465               	retlw	112	;'p'
  1145  002C  3470               	retlw	112	;'p'
  1146  002D  3470               	retlw	101	;'e'
  1147  002E  3465               	retlw	114	;'r'
  1148  002F  3472               	retlw	32	;' '
  1149  0030  3420               	retlw	109	;'m'
  1150  0031  346D               	retlw	111	;'o'
  1151  0032  346F               	retlw	116	;'t'
  1152  0033  3474               	retlw	111	;'o'
  1153  0034  346F               	retlw	114	;'r'
  1154  0035  3472               	retlw	0
  1155  0036  3400               psect	strings
  1156                           ; #config settings
  1157                           global __CFG_FOSC$INTRC_NOCLKOUT
  1158                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1159  0000                     global __CFG_WDTE$OFF
  1160                           __CFG_WDTE$OFF equ 0x0
  1161  0000                     global __CFG_PWRTE$OFF
  1162                           __CFG_PWRTE$OFF equ 0x0
  1163  0000                     global __CFG_MCLRE$OFF
  1164                           __CFG_MCLRE$OFF equ 0x0
  1165  0000                     global __CFG_CP$OFF
  1166                           __CFG_CP$OFF equ 0x0
  1167  0000                     global __CFG_CPD$OFF
  1168                           __CFG_CPD$OFF equ 0x0
  1169  0000                     global __CFG_BOREN$OFF
  1170                           __CFG_BOREN$OFF equ 0x0
  1171  0000                     global __CFG_IESO$OFF
  1172                           __CFG_IESO$OFF equ 0x0
  1173  0000                     global __CFG_FCMEN$OFF
  1174                           __CFG_FCMEN$OFF equ 0x0
  1175  0000                     global __CFG_LVP$OFF
  1176                           __CFG_LVP$OFF equ 0x0
  1177  0000                     global __CFG_BOR4V$BOR40V
  1178                           __CFG_BOR4V$BOR40V equ 0x0
  1179  0000                     global __CFG_WRT$OFF
  1180                           __CFG_WRT$OFF equ 0x0
  1181  0000                     	file	"C:\Users\21192923\AppData\Local\Temp\s870."
  1182                           	line	#
  1183                           psect cinit,class=CODE,delta=2
  1184                           global start_initialization
  1185                           start_initialization:
  1186  07E7                     
  1187                           global __initialization
  1188                           __initialization:
  1189  07E7                     psect	bssBANK0,class=BANK0,space=1,noexec
  1190                           global __pbssBANK0
  1191                           __pbssBANK0:
  1192  0045                     _contador_passos:
  1193  0045                            ds      4
  1194  0045                     
  1195                           _ppr:
  1196  0049                            ds      2
  1197  0049                     
  1198                           _passo:
  1199  004B                            ds      1
  1200  004B                     
  1201                           psect	dataBANK0,class=BANK0,space=1,noexec
  1202                           global __pdataBANK0
  1203                           __pdataBANK0:
  1204  003D                     	file	"stepmotor.c"
  1205                           	line	14
  1206                           _motor:
  1207  003D                            ds      8
  1208  003D                     
  1209                           	file	"C:\Users\21192923\AppData\Local\Temp\s870."
  1210                           	line	#
  1211                           global btemp
  1212                           psect inittext,class=CODE,delta=2
  1213                           global init_fetch0,btemp
  1214                           ;	Called with low address in FSR and high address in W
  1215                           init_fetch0:
  1216  0401                     	movf btemp,w
  1217  0401  087E               	movwf pclath
  1218  0402  008A               	movf btemp+1,w
  1219  0403  087F               	movwf pc
  1220  0404  0082               global init_ram0
  1221                           ;Called with:
  1222                           ;	high address of idata address in btemp 
  1223                           ;	low address of idata address in btemp+1 
  1224                           ;	low address of data in FSR
  1225                           ;	high address + 1 of data in btemp-1
  1226                           init_ram0:
  1227  0405                     	fcall init_fetch0
  1228  0405  120A  118A  2401  120A  118A  	movwf indf,f
  1229  040A  0080               	incf fsr,f
  1230  040B  0A84               	movf fsr,w
  1231  040C  0804               	xorwf btemp-1,w
  1232  040D  067D               	btfsc status,2
  1233  040E  1903               	retlw 0
  1234  040F  3400               	incf btemp+1,f
  1235  0410  0AFF               	btfsc status,2
  1236  0411  1903               	incf btemp,f
  1237  0412  0AFE               	goto init_ram0
  1238  0413  2C05               ; Initialize objects allocated to BANK0
  1239                           psect cinit,class=CODE,delta=2,merge=1
  1240                           global init_ram0, __pidataBANK0
  1241                           	bcf	status, 7	;select IRP bank0
  1242  07E7  1383               	movlw low(__pdataBANK0+8)
  1243  07E8  3045               	movwf btemp-1,f
  1244  07E9  00FD               	movlw high(__pidataBANK0)
  1245  07EA  3003               	movwf btemp,f
  1246  07EB  00FE               	movlw low(__pidataBANK0)
  1247  07EC  30D5               	movwf btemp+1,f
  1248  07ED  00FF               	movlw low(__pdataBANK0)
  1249  07EE  303D               	movwf fsr,f
  1250  07EF  0084               	fcall init_ram0
  1251  07F0  120A  118A  2405  120A  118A  	line	#
  1252                           ; Clear objects allocated to BANK0
  1253                           psect cinit,class=CODE,delta=2,merge=1
  1254                           	clrf	((__pbssBANK0)+0)&07Fh
  1255  07F5  01C5               	clrf	((__pbssBANK0)+1)&07Fh
  1256  07F6  01C6               	clrf	((__pbssBANK0)+2)&07Fh
  1257  07F7  01C7               	clrf	((__pbssBANK0)+3)&07Fh
  1258  07F8  01C8               	clrf	((__pbssBANK0)+4)&07Fh
  1259  07F9  01C9               	clrf	((__pbssBANK0)+5)&07Fh
  1260  07FA  01CA               	clrf	((__pbssBANK0)+6)&07Fh
  1261  07FB  01CB               psect cinit,class=CODE,delta=2,merge=1
  1262                           global end_of_initialization,__end_of__initialization
  1263                           
  1264                           ;End of C runtime variable initialization code
  1265                           
  1266                           end_of_initialization:
  1267  07FC                     __end_of__initialization:
  1268  07FC                     clrf status
  1269  07FC  0183               ljmp _main	;jump to C main() function
  1270  07FD  120A  118A  2D69   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1271                           global __pcstackCOMMON
  1272                           __pcstackCOMMON:
  1273  0070                     ?_teclado_init:	; 1 bytes @ 0x0
  1274  0070                     ??_teclado_init:	; 1 bytes @ 0x0
  1275  0070                     ?_stepmotor_init:	; 1 bytes @ 0x0
  1276  0070                     ?_teclado:	; 1 bytes @ 0x0
  1277  0070                     ??_teclado:	; 1 bytes @ 0x0
  1278  0070                     ?_delay:	; 1 bytes @ 0x0
  1279  0070                     ?_lcd_instReg:	; 1 bytes @ 0x0
  1280  0070                     ??_lcd_instReg:	; 1 bytes @ 0x0
  1281  0070                     ?_lcd_dataReg:	; 1 bytes @ 0x0
  1282  0070                     ??_lcd_dataReg:	; 1 bytes @ 0x0
  1283  0070                     ?_lcd_init:	; 1 bytes @ 0x0
  1284  0070                     ?_main:	; 1 bytes @ 0x0
  1285  0070                     ?___bmul:	; 1 bytes @ 0x0
  1286  0070                     	global	?___lmul
  1287                           ?___lmul:	; 4 bytes @ 0x0
  1288  0070                     	global	___bmul@multiplicand
  1289                           ___bmul@multiplicand:	; 1 bytes @ 0x0
  1290  0070                     	global	delay@t
  1291                           delay@t:	; 2 bytes @ 0x0
  1292  0070                     	global	stepmotor_init@pulsosPorRevolucao
  1293                           stepmotor_init@pulsosPorRevolucao:	; 2 bytes @ 0x0
  1294  0070                     	global	___lmul@multiplier
  1295                           ___lmul@multiplier:	; 4 bytes @ 0x0
  1296  0070                     	ds	1
  1297  0070                     ??___bmul:	; 1 bytes @ 0x1
  1298  0071                     	ds	1
  1299  0071                     ??_stepmotor_init:	; 1 bytes @ 0x2
  1300  0072                     ??_delay:	; 1 bytes @ 0x2
  1301  0072                     	global	lcd_instReg@i
  1302                           lcd_instReg@i:	; 1 bytes @ 0x2
  1303  0072                     	global	lcd_dataReg@d
  1304                           lcd_dataReg@d:	; 1 bytes @ 0x2
  1305  0072                     	global	___bmul@product
  1306                           ___bmul@product:	; 1 bytes @ 0x2
  1307  0072                     	ds	1
  1308  0072                     ?_lcd_lincol:	; 1 bytes @ 0x3
  1309  0073                     ??_lcd_init:	; 1 bytes @ 0x3
  1310  0073                     	global	lcd_lincol@col
  1311                           lcd_lincol@col:	; 1 bytes @ 0x3
  1312  0073                     	global	___bmul@multiplier
  1313                           ___bmul@multiplier:	; 1 bytes @ 0x3
  1314  0073                     	ds	1
  1315  0073                     ??_lcd_lincol:	; 1 bytes @ 0x4
  1316  0074                     	global	___lmul@multiplicand
  1317                           ___lmul@multiplicand:	; 4 bytes @ 0x4
  1318  0074                     	ds	1
  1319  0074                     	global	lcd_lincol@lin
  1320                           lcd_lincol@lin:	; 1 bytes @ 0x5
  1321  0075                     	ds	1
  1322  0075                     ?_lcd_print:	; 1 bytes @ 0x6
  1323  0076                     	global	lcd_print@col
  1324                           lcd_print@col:	; 1 bytes @ 0x6
  1325  0076                     	ds	1
  1326  0076                     	global	lcd_print@str
  1327                           lcd_print@str:	; 1 bytes @ 0x7
  1328  0077                     	global	teclado@aux
  1329                           teclado@aux:	; 1 bytes @ 0x7
  1330  0077                     	ds	1
  1331  0077                     ??_lcd_print:	; 1 bytes @ 0x8
  1332  0078                     ??___lmul:	; 1 bytes @ 0x8
  1333  0078                     	global	teclado@l
  1334                           teclado@l:	; 1 bytes @ 0x8
  1335  0078                     	ds	1
  1336  0078                     	global	lcd_print@pos
  1337                           lcd_print@pos:	; 1 bytes @ 0x9
  1338  0079                     	global	teclado@c
  1339                           teclado@c:	; 1 bytes @ 0x9
  1340  0079                     	global	___lmul@product
  1341                           ___lmul@product:	; 4 bytes @ 0x9
  1342  0079                     	ds	1
  1343  0079                     	global	lcd_print@lin
  1344                           lcd_print@lin:	; 1 bytes @ 0xA
  1345  007A                     	ds	3
  1346  007A                     ??___lldiv:	; 1 bytes @ 0xD
  1347  007D                     	ds	1
  1348  007D                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1349                           global __pcstackBANK0
  1350                           __pcstackBANK0:
  1351  0020                     	global	?___lldiv
  1352                           ?___lldiv:	; 4 bytes @ 0x0
  1353  0020                     	global	___lldiv@divisor
  1354                           ___lldiv@divisor:	; 4 bytes @ 0x0
  1355  0020                     	ds	4
  1356  0020                     	global	___lldiv@dividend
  1357                           ___lldiv@dividend:	; 4 bytes @ 0x4
  1358  0024                     	ds	4
  1359  0024                     	global	___lldiv@quotient
  1360                           ___lldiv@quotient:	; 4 bytes @ 0x8
  1361  0028                     	ds	4
  1362  0028                     	global	___lldiv@counter
  1363                           ___lldiv@counter:	; 1 bytes @ 0xC
  1364  002C                     	ds	1
  1365  002C                     ?_stepmotor:	; 1 bytes @ 0xD
  1366  002D                     	global	stepmotor@qtd_graus_passos
  1367                           stepmotor@qtd_graus_passos:	; 4 bytes @ 0xD
  1368  002D                     	ds	4
  1369  002D                     	global	stepmotor@unidade
  1370                           stepmotor@unidade:	; 1 bytes @ 0x11
  1371  0031                     	ds	1
  1372  0031                     	global	stepmotor@sentido
  1373                           stepmotor@sentido:	; 1 bytes @ 0x12
  1374  0032                     	ds	1
  1375  0032                     	global	stepmotor@meio_passo
  1376                           stepmotor@meio_passo:	; 1 bytes @ 0x13
  1377  0033                     	ds	1
  1378  0033                     	global	stepmotor@t
  1379                           stepmotor@t:	; 2 bytes @ 0x14
  1380  0034                     	ds	2
  1381  0034                     ??_stepmotor:	; 1 bytes @ 0x16
  1382  0036                     	ds	4
  1383  0036                     	global	stepmotor@passo_sentido
  1384                           stepmotor@passo_sentido:	; 1 bytes @ 0x1A
  1385  003A                     	ds	1
  1386  003A                     ??_main:	; 1 bytes @ 0x1B
  1387  003B                     	ds	1
  1388  003B                     	global	main@tecla
  1389                           main@tecla:	; 1 bytes @ 0x1C
  1390  003C                     	ds	1
  1391  003C                     ;!
  1392                           ;!Data Sizes:
  1393                           ;!    Strings     30
  1394                           ;!    Constant    16
  1395                           ;!    Data        8
  1396                           ;!    BSS         7
  1397                           ;!    Persistent  0
  1398                           ;!    Stack       0
  1399                           ;!
  1400                           ;!Auto Spaces:
  1401                           ;!    Space          Size  Autos    Used
  1402                           ;!    COMMON           14     14      14
  1403                           ;!    BANK0            80     29      44
  1404                           ;!    BANK1            80      0       0
  1405                           ;!    BANK3            96      0       0
  1406                           ;!    BANK2            96      0       0
  1407                           
  1408                           ;!
  1409                           ;!Pointer List with Targets:
  1410                           ;!
  1411                           ;!    lcd_print@str	PTR const unsigned char  size(1) Largest target is 16
  1412                           ;!		 -> STR_2(CODE[14]), STR_1(CODE[16]), 
  1413                           ;!
  1414                           
  1415                           
  1416                           ;!
  1417                           ;!Critical Paths under _main in COMMON
  1418                           ;!
  1419                           ;!    _stepmotor->___lldiv
  1420                           ;!    ___lldiv->___lmul
  1421                           ;!    _lcd_print->_lcd_lincol
  1422                           ;!    _lcd_lincol->_lcd_instReg
  1423                           ;!    _lcd_init->_delay
  1424                           ;!    _lcd_init->_lcd_instReg
  1425                           ;!
  1426                           ;!Critical Paths under _main in BANK0
  1427                           ;!
  1428                           ;!    _main->_stepmotor
  1429                           ;!    _stepmotor->___lldiv
  1430                           ;!
  1431                           ;!Critical Paths under _main in BANK1
  1432                           ;!
  1433                           ;!    None.
  1434                           ;!
  1435                           ;!Critical Paths under _main in BANK3
  1436                           ;!
  1437                           ;!    None.
  1438                           ;!
  1439                           ;!Critical Paths under _main in BANK2
  1440                           ;!
  1441                           ;!    None.
  1442                           
  1443 ;;
  1444 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1445 ;;
  1446                           
  1447                           ;!
  1448                           ;!Call Graph Tables:
  1449                           ;!
  1450                           ;! ---------------------------------------------------------------------------------
  1451                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1452                           ;! ---------------------------------------------------------------------------------
  1453                           ;! (0) _main                                                 2     2      0    3296
  1454                           ;!                                             27 BANK0      2     2      0
  1455                           ;!                           _lcd_init
  1456                           ;!                          _lcd_print
  1457                           ;!                          _stepmotor
  1458                           ;!                     _stepmotor_init
  1459                           ;!                            _teclado
  1460                           ;!                       _teclado_init
  1461                           ;! ---------------------------------------------------------------------------------
  1462                           ;! (1) _teclado_init                                         0     0      0       0
  1463                           ;! ---------------------------------------------------------------------------------
  1464                           ;! (2) _teclado                                             10    10      0     204
  1465                           ;!                                              0 COMMON    10    10      0
  1466                           ;! ---------------------------------------------------------------------------------
  1467                           ;! (1) _stepmotor_init                                       3     1      2      98
  1468                           ;!                                              0 COMMON     3     1      2
  1469                           ;! ---------------------------------------------------------------------------------
  1470                           ;! (1) _stepmotor                                           14     5      9    1612
  1471                           ;!                                             13 BANK0     14     5      9
  1472                           ;!                             ___bmul
  1473                           ;!                            ___lldiv
  1474                           ;!                             ___lmul
  1475                           ;!                              _delay
  1476                           ;! ---------------------------------------------------------------------------------
  1477                           ;! (2) ___lmul                                              13     5      8     244
  1478                           ;!                                              0 COMMON    13     5      8
  1479                           ;! ---------------------------------------------------------------------------------
  1480                           ;! (2) ___lldiv                                             14     6      8     314
  1481                           ;!                                             13 COMMON     1     1      0
  1482                           ;!                                              0 BANK0     13     5      8
  1483                           ;!                             ___lmul (ARG)
  1484                           ;! ---------------------------------------------------------------------------------
  1485                           ;! (2) ___bmul                                               4     3      1     168
  1486                           ;!                                              0 COMMON     4     3      1
  1487                           ;! ---------------------------------------------------------------------------------
  1488                           ;! (1) _lcd_print                                            5     3      2     833
  1489                           ;!                                              6 COMMON     5     3      2
  1490                           ;!                        _lcd_dataReg
  1491                           ;!                         _lcd_lincol
  1492                           ;! ---------------------------------------------------------------------------------
  1493                           ;! (2) _lcd_lincol                                           3     2      1     372
  1494                           ;!                                              3 COMMON     3     2      1
  1495                           ;!                        _lcd_instReg
  1496                           ;! ---------------------------------------------------------------------------------
  1497                           ;! (2) _lcd_dataReg                                          3     3      0      44
  1498                           ;!                                              0 COMMON     3     3      0
  1499                           ;! ---------------------------------------------------------------------------------
  1500                           ;! (1) _lcd_init                                             0     0      0     503
  1501                           ;!                              _delay
  1502                           ;!                        _lcd_instReg
  1503                           ;! ---------------------------------------------------------------------------------
  1504                           ;! (3) _lcd_instReg                                          3     3      0     176
  1505                           ;!                                              0 COMMON     3     3      0
  1506                           ;! ---------------------------------------------------------------------------------
  1507                           ;! (2) _delay                                                3     1      2     327
  1508                           ;!                                              0 COMMON     3     1      2
  1509                           ;! ---------------------------------------------------------------------------------
  1510                           ;! Estimated maximum stack depth 3
  1511                           ;! ---------------------------------------------------------------------------------
  1512                           ;!
  1513                           ;! Call Graph Graphs:
  1514                           ;!
  1515                           ;! _main (ROOT)
  1516                           ;!   _lcd_init
  1517                           ;!     _delay
  1518                           ;!     _lcd_instReg
  1519                           ;!   _lcd_print
  1520                           ;!     _lcd_dataReg
  1521                           ;!     _lcd_lincol
  1522                           ;!       _lcd_instReg
  1523                           ;!   _stepmotor
  1524                           ;!     ___bmul
  1525                           ;!     ___lldiv
  1526                           ;!       ___lmul (ARG)
  1527                           ;!     ___lmul
  1528                           ;!     _delay
  1529                           ;!   _stepmotor_init
  1530                           ;!   _teclado
  1531                           ;!   _teclado_init
  1532                           ;!
  1533                           
  1534                           ;! Address spaces:
  1535                           
  1536                           ;!Name               Size   Autos  Total    Cost      Usage
  1537                           ;!BANK3               60      0       0       9        0.0%
  1538                           ;!BITBANK3            60      0       0       8        0.0%
  1539                           ;!SFR3                 0      0       0       4        0.0%
  1540                           ;!BITSFR3              0      0       0       4        0.0%
  1541                           ;!BANK2               60      0       0      11        0.0%
  1542                           ;!BITBANK2            60      0       0      10        0.0%
  1543                           ;!SFR2                 0      0       0       5        0.0%
  1544                           ;!BITSFR2              0      0       0       5        0.0%
  1545                           ;!BANK1               50      0       0       7        0.0%
  1546                           ;!BITBANK1            50      0       0       6        0.0%
  1547                           ;!SFR1                 0      0       0       2        0.0%
  1548                           ;!BITSFR1              0      0       0       2        0.0%
  1549                           ;!BANK0               50     1D      2C       5       55.0%
  1550                           ;!BITBANK0            50      0       0       4        0.0%
  1551                           ;!SFR0                 0      0       0       1        0.0%
  1552                           ;!BITSFR0              0      0       0       1        0.0%
  1553                           ;!COMMON               E      E       E       1      100.0%
  1554                           ;!BITCOMMON            E      0       0       0        0.0%
  1555                           ;!CODE                 0      0       0       0        0.0%
  1556                           ;!DATA                 0      0      3A      12        0.0%
  1557                           ;!ABS                  0      0      3A       3        0.0%
  1558                           ;!NULL                 0      0       0       0        0.0%
  1559                           ;!STACK                0      0       0       2        0.0%
  1560                           ;!EEDATA             100      0       0       0        0.0%
  1561                           
  1562                           	global	_main
  1563                           
  1564 ;; *************** function _main *****************
  1565 ;; Defined at:
  1566 ;;		line 7 in file "main.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;		None
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;  tecla           1   28[BANK0 ] unsigned char 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      void 
  1573 ;; Registers used:
  1574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : B00/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1580 ;;      Params:         0       0       0       0       0
  1581 ;;      Locals:         0       1       0       0       0
  1582 ;;      Temps:          0       1       0       0       0
  1583 ;;      Totals:         0       2       0       0       0
  1584 ;;Total ram usage:        2 bytes
  1585 ;; Hardware stack levels required when called:    3
  1586 ;; This function calls:
  1587 ;;		_lcd_init
  1588 ;;		_lcd_print
  1589 ;;		_stepmotor
  1590 ;;		_stepmotor_init
  1591 ;;		_teclado
  1592 ;;		_teclado_init
  1593 ;; This function is called by:
  1594 ;;		Startup code after reset
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1598                           	file	"main.c"
  1599                           	line	7
  1600                           global __pmaintext
  1601                           __pmaintext:	;psect for function _main
  1602  0569                     psect	maintext
  1603                           	file	"main.c"
  1604                           	line	7
  1605                           	global	__size_of_main
  1606                           	__size_of_main	equ	__end_of_main-_main
  1607  0063                     	
  1608                           _main:	
  1609  0569                     ;incstack = 0
  1610                           	opt	stack 5
  1611                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1612                           	line	9
  1613                           	
  1614                           l1262:	
  1615  0569                     ;main.c: 9:     char tecla = 0;
  1616                           	bcf	status, 5	;RP0=0, select bank0
  1617  0569  1283               	bcf	status, 6	;RP1=0, select bank0
  1618  056A  1303               	clrf	(main@tecla)
  1619  056B  01BC               	line	10
  1620                           	
  1621                           l1264:	
  1622  056C                     ;main.c: 10:     lcd_init();
  1623                           	fcall	_lcd_init
  1624  056C  120A  118A  24E0  120A  118A  	line	11
  1625                           	
  1626                           l1266:	
  1627  0571                     ;main.c: 11:     teclado_init();
  1628                           	fcall	_teclado_init
  1629  0571  120A  118A  23DD  120A  118A  	line	12
  1630                           	
  1631                           l1268:	
  1632  0576                     ;main.c: 12:     stepmotor_init( 200 );
  1633                           	movlw	0C8h
  1634  0576  30C8               	movwf	(stepmotor_init@pulsosPorRevolucao)
  1635  0577  00F0               	movlw	0
  1636  0578  3000               	movwf	((stepmotor_init@pulsosPorRevolucao))+1
  1637  0579  00F1               	fcall	_stepmotor_init
  1638  057A  120A  118A  2477  120A  118A  	goto	l1270
  1639  057F  2D80               	line	13
  1640                           ;main.c: 13:     while( 1 )
  1641                           	
  1642                           l82:	
  1643  0580                     	line	15
  1644                           	
  1645                           l1270:	
  1646  0580                     ;main.c: 14:     {;main.c: 15:         tecla = teclado();
  1647                           	fcall	_teclado
  1648  0580  120A  118A  25CC  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1649  0585  1283               	bcf	status, 6	;RP1=0, select bank0
  1650  0586  1303               	movwf	(??_main+0)+0
  1651  0587  00BB               	movf	(??_main+0)+0,w
  1652  0588  083B               	movwf	(main@tecla)
  1653  0589  00BC               	line	16
  1654                           	
  1655                           l1272:	
  1656  058A                     ;main.c: 16:         if (tecla == '1')
  1657                           		movlw	49
  1658  058A  3031               	xorwf	((main@tecla)),w
  1659  058B  063C               	btfss	status,2
  1660  058C  1D03               	goto	u1091
  1661  058D  2D8F               	goto	u1090
  1662  058E  2D90               u1091:
  1663  058F                     	goto	l1276
  1664  058F  2DB3               u1090:
  1665  0590                     	line	18
  1666                           	
  1667                           l1274:	
  1668  0590                     ;main.c: 17:         {;main.c: 18:             lcd_print(0,0, "motor de passos" );
  1669                           	clrf	(lcd_print@col)
  1670  0590  01F6               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  1671  0591  3011               	movwf	(??_main+0)+0
  1672  0592  00BB               	movf	(??_main+0)+0,w
  1673  0593  083B               	movwf	(lcd_print@str)
  1674  0594  00F7               	movlw	low(0)
  1675  0595  3000               	fcall	_lcd_print
  1676  0596  120A  118A  2444  120A  118A  	line	19
  1677                           ;main.c: 19:             stepmotor( 200, 1, 0, 0, 200 );
  1678                           	movlw	0
  1679  059B  3000               	bcf	status, 5	;RP0=0, select bank0
  1680  059C  1283               	bcf	status, 6	;RP1=0, select bank0
  1681  059D  1303               	movwf	(stepmotor@qtd_graus_passos+3)
  1682  059E  00B0               	movlw	0
  1683  059F  3000               	movwf	(stepmotor@qtd_graus_passos+2)
  1684  05A0  00AF               	movlw	0
  1685  05A1  3000               	movwf	(stepmotor@qtd_graus_passos+1)
  1686  05A2  00AE               	movlw	0C8h
  1687  05A3  30C8               	movwf	(stepmotor@qtd_graus_passos)
  1688  05A4  00AD               
  1689                           	clrf	(stepmotor@unidade)
  1690  05A5  01B1               	incf	(stepmotor@unidade),f
  1691  05A6  0AB1               	clrf	(stepmotor@sentido)
  1692  05A7  01B2               	clrf	(stepmotor@meio_passo)
  1693  05A8  01B3               	movlw	0C8h
  1694  05A9  30C8               	movwf	(stepmotor@t)
  1695  05AA  00B4               	movlw	0
  1696  05AB  3000               	movwf	((stepmotor@t))+1
  1697  05AC  00B5               	fcall	_stepmotor
  1698  05AD  120A  118A  2733  120A  118A  	goto	l1276
  1699  05B2  2DB3               	line	20
  1700                           ;main.c: 20:         }
  1701                           	
  1702                           l83:	
  1703  05B3                     	line	21
  1704                           	
  1705                           l1276:	
  1706  05B3                     ;main.c: 21:         if (tecla == '2')
  1707                           		movlw	50
  1708  05B3  3032               	bcf	status, 5	;RP0=0, select bank0
  1709  05B4  1283               	bcf	status, 6	;RP1=0, select bank0
  1710  05B5  1303               	xorwf	((main@tecla)),w
  1711  05B6  063C               	btfss	status,2
  1712  05B7  1D03               	goto	u1101
  1713  05B8  2DBA               	goto	u1100
  1714  05B9  2DBB               u1101:
  1715  05BA                     	goto	l1270
  1716  05BA  2D80               u1100:
  1717  05BB                     	line	22
  1718                           	
  1719                           l1278:	
  1720  05BB                     ;main.c: 22:             lcd_print (0,0,"stepper motor");
  1721                           	clrf	(lcd_print@col)
  1722  05BB  01F6               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  1723  05BC  3021               	movwf	(??_main+0)+0
  1724  05BD  00BB               	movf	(??_main+0)+0,w
  1725  05BE  083B               	movwf	(lcd_print@str)
  1726  05BF  00F7               	movlw	low(0)
  1727  05C0  3000               	fcall	_lcd_print
  1728  05C1  120A  118A  2444  120A  118A  	goto	l1270
  1729  05C6  2D80               	
  1730                           l84:	
  1731  05C7                     	goto	l1270
  1732  05C7  2D80               	line	23
  1733                           ;main.c: 23:     }
  1734                           	
  1735                           l85:	
  1736  05C8                     	goto	l1270
  1737  05C8  2D80               	
  1738                           l86:	
  1739  05C9                     	line	24
  1740                           	
  1741                           l87:	
  1742  05C9                     	global	start
  1743                           	ljmp	start
  1744  05C9  120A  118A  2800   	opt stack 0
  1745                           GLOBAL	__end_of_main
  1746                           	__end_of_main:
  1747  05CC                     	signat	_main,89
  1748                           	global	_teclado_init
  1749                           
  1750 ;; *************** function _teclado_init *****************
  1751 ;; Defined at:
  1752 ;;		line 9 in file "teclado.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;		None
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;		None
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		wreg, status,2
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1766 ;;      Params:         0       0       0       0       0
  1767 ;;      Locals:         0       0       0       0       0
  1768 ;;      Temps:          0       0       0       0       0
  1769 ;;      Totals:         0       0       0       0       0
  1770 ;;Total ram usage:        0 bytes
  1771 ;; Hardware stack levels used:    1
  1772 ;; This function calls:
  1773 ;;		Nothing
  1774 ;; This function is called by:
  1775 ;;		_main
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1779                           	file	"teclado.c"
  1780                           	line	9
  1781                           global __ptext1
  1782                           __ptext1:	;psect for function _teclado_init
  1783  03DD                     psect	text1
  1784                           	file	"teclado.c"
  1785                           	line	9
  1786                           	global	__size_of_teclado_init
  1787                           	__size_of_teclado_init	equ	__end_of_teclado_init-_teclado_init
  1788  0011                     	
  1789                           _teclado_init:	
  1790  03DD                     ;incstack = 0
  1791                           	opt	stack 7
  1792                           ; Regs used in _teclado_init: [wreg+status,2]
  1793                           	line	11
  1794                           	
  1795                           l1144:	
  1796  03DD                     ;teclado.c: 11:     TRISB = 0xF0;
  1797                           	movlw	low(0F0h)
  1798  03DD  30F0               	bsf	status, 5	;RP0=1, select bank1
  1799  03DE  1683               	bcf	status, 6	;RP1=0, select bank1
  1800  03DF  1303               	movwf	(134)^080h	;volatile
  1801  03E0  0086               	line	12
  1802                           	
  1803                           l1146:	
  1804  03E1                     ;teclado.c: 12:     ANSELH = 0x00;
  1805                           	bsf	status, 5	;RP0=1, select bank3
  1806  03E1  1683               	bsf	status, 6	;RP1=1, select bank3
  1807  03E2  1703               	clrf	(393)^0180h	;volatile
  1808  03E3  0189               	line	13
  1809                           	
  1810                           l1148:	
  1811  03E4                     ;teclado.c: 13:     OPTION_REGbits.nRBPU = 0;
  1812                           	bsf	status, 5	;RP0=1, select bank1
  1813  03E4  1683               	bcf	status, 6	;RP1=0, select bank1
  1814  03E5  1303               	bcf	(129)^080h,7	;volatile
  1815  03E6  1381               	line	14
  1816                           	
  1817                           l1150:	
  1818  03E7                     ;teclado.c: 14:     WPUB = 0xFF;
  1819                           	movlw	low(0FFh)
  1820  03E7  30FF               	movwf	(149)^080h	;volatile
  1821  03E8  0095               	line	15
  1822                           	
  1823                           l1152:	
  1824  03E9                     ;teclado.c: 15:     PORTB = 0xFF;
  1825                           	movlw	low(0FFh)
  1826  03E9  30FF               	bcf	status, 5	;RP0=0, select bank0
  1827  03EA  1283               	bcf	status, 6	;RP1=0, select bank0
  1828  03EB  1303               	movwf	(6)	;volatile
  1829  03EC  0086               	line	16
  1830                           	
  1831                           l100:	
  1832  03ED                     	return
  1833  03ED  0008               	opt stack 0
  1834                           GLOBAL	__end_of_teclado_init
  1835                           	__end_of_teclado_init:
  1836  03EE                     	signat	_teclado_init,89
  1837                           	global	_teclado
  1838                           
  1839 ;; *************** function _teclado *****************
  1840 ;; Defined at:
  1841 ;;		line 23 in file "teclado.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;  c               1    9[COMMON] unsigned char 
  1846 ;;  l               1    8[COMMON] unsigned char 
  1847 ;;  aux             1    7[COMMON] unsigned char 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      unsigned char 
  1850 ;; Registers used:
  1851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1857 ;;      Params:         0       0       0       0       0
  1858 ;;      Locals:         3       0       0       0       0
  1859 ;;      Temps:          7       0       0       0       0
  1860 ;;      Totals:        10       0       0       0       0
  1861 ;;Total ram usage:       10 bytes
  1862 ;; Hardware stack levels used:    2
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_main
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1870                           	line	23
  1871                           global __ptext2
  1872                           __ptext2:	;psect for function _teclado
  1873  05CC                     psect	text2
  1874                           	file	"teclado.c"
  1875                           	line	23
  1876                           	global	__size_of_teclado
  1877                           	__size_of_teclado	equ	__end_of_teclado-_teclado
  1878  006D                     	
  1879                           _teclado:	
  1880  05CC                     ;incstack = 0
  1881                           	opt	stack 6
  1882                           ; Regs used in _teclado: [wreg-fsr0h+status,2+status,0+pclath]
  1883                           	line	25
  1884                           	
  1885                           l1164:	
  1886  05CC                     ;teclado.c: 25:     unsigned char aux = 0;
  1887                           	clrf	(teclado@aux)
  1888  05CC  01F7               	line	28
  1889                           ;teclado.c: 26:     unsigned char l,c;;teclado.c: 28:     for( l=0; l<4; l++ )
  1890                           	clrf	(teclado@l)
  1891  05CD  01F8               	
  1892                           l1166:	
  1893  05CE                     	movlw	low(04h)
  1894  05CE  3004               	subwf	(teclado@l),w
  1895  05CF  0278               	skipc
  1896  05D0  1C03               	goto	u861
  1897  05D1  2DD3               	goto	u860
  1898  05D2  2DD4               u861:
  1899  05D3                     	goto	l1170
  1900  05D3  2DD6               u860:
  1901  05D4                     	goto	l1190
  1902  05D4  2E36               	
  1903                           l1168:	
  1904  05D5                     	goto	l1190
  1905  05D5  2E36               	
  1906                           l105:	
  1907  05D6                     	line	30
  1908                           	
  1909                           l1170:	
  1910  05D6                     ;teclado.c: 29:     {;teclado.c: 30:         PORTB = (unsigned char)~(0x01 << l);
  1911                           	movlw	low(01h)
  1912  05D6  3001               	movwf	(??_teclado+0)+0
  1913  05D7  00F0               	incf	(teclado@l),w
  1914  05D8  0A78               	goto	u874
  1915  05D9  2DDC               u875:
  1916  05DA                     	clrc
  1917  05DA  1003               	rlf	(??_teclado+0)+0,f
  1918  05DB  0DF0               u874:
  1919  05DC                     	addlw	-1
  1920  05DC  3EFF               	skipz
  1921  05DD  1D03               	goto	u875
  1922  05DE  2DDA               	movf	0+(??_teclado+0)+0,w
  1923  05DF  0870               	xorlw	0ffh
  1924  05E0  3AFF               	bcf	status, 5	;RP0=0, select bank0
  1925  05E1  1283               	bcf	status, 6	;RP1=0, select bank0
  1926  05E2  1303               	movwf	(6)	;volatile
  1927  05E3  0086               	line	31
  1928                           	
  1929                           l1172:	
  1930  05E4                     ;teclado.c: 31:         for( c=0; c<4; c++ )
  1931                           	clrf	(teclado@c)
  1932  05E4  01F9               	
  1933                           l1174:	
  1934  05E5                     	movlw	low(04h)
  1935  05E5  3004               	subwf	(teclado@c),w
  1936  05E6  0279               	skipc
  1937  05E7  1C03               	goto	u881
  1938  05E8  2DEA               	goto	u880
  1939  05E9  2DEB               u881:
  1940  05EA                     	goto	l1178
  1941  05EA  2DED               u880:
  1942  05EB                     	goto	l1186
  1943  05EB  2E2B               	
  1944                           l1176:	
  1945  05EC                     	goto	l1186
  1946  05EC  2E2B               	
  1947                           l107:	
  1948  05ED                     	line	33
  1949                           	
  1950                           l1178:	
  1951  05ED                     ;teclado.c: 32:         {;teclado.c: 33:             if( ~PORTB & (0x10<<c) )
  1952                           	comf	(6),w	;volatile
  1953  05ED  0906               	movwf	(??_teclado+0)+0
  1954  05EE  00F0               	clrf	(??_teclado+0)+0+1
  1955  05EF  01F1               	comf	(??_teclado+0)+0+1
  1956  05F0  09F1               	incf	(teclado@c),w
  1957  05F1  0A79               	movwf	(??_teclado+2)+0
  1958  05F2  00F2               	movlw	010h
  1959  05F3  3010               	movwf	(??_teclado+3)+0
  1960  05F4  00F3               	movlw	0
  1961  05F5  3000               	movwf	(??_teclado+3)+0+1
  1962  05F6  00F4               	goto	u894
  1963  05F7  2DFB               u895:
  1964  05F8                     	clrc
  1965  05F8  1003               	rlf	(??_teclado+3)+0,f
  1966  05F9  0DF3               	rlf	(??_teclado+3)+1,f
  1967  05FA  0DF4               u894:
  1968  05FB                     	decfsz	(??_teclado+2)+0,f
  1969  05FB  0BF2               	goto	u895
  1970  05FC  2DF8               	
  1971                           	movf	0+(??_teclado+0)+0,w
  1972  05FD  0870               	andwf	0+(??_teclado+3)+0,w
  1973  05FE  0573               	movwf	(??_teclado+5)+0
  1974  05FF  00F5               	movf	1+(??_teclado+0)+0,w
  1975  0600  0871               	andwf	1+(??_teclado+3)+0,w
  1976  0601  0574               	movwf	1+(??_teclado+5)+0
  1977  0602  00F6               	movf	((??_teclado+5)+0),w
  1978  0603  0875               iorwf	((??_teclado+5)+1),w
  1979  0604  0476               	btfsc	status,2
  1980  0605  1903               	goto	u901
  1981  0606  2E08               	goto	u900
  1982  0607  2E09               u901:
  1983  0608                     	goto	l1182
  1984  0608  2E20               u900:
  1985  0609                     	line	34
  1986                           	
  1987                           l1180:	
  1988  0609                     ;teclado.c: 34:                 aux = tecladoMatriz[l][c];
  1989                           	movf	(teclado@l),w
  1990  0609  0878               	movwf	(??_teclado+0)+0
  1991  060A  00F0               	movlw	02h
  1992  060B  3002               u915:
  1993  060C                     	clrc
  1994  060C  1003               	rlf	(??_teclado+0)+0,f
  1995  060D  0DF0               	addlw	-1
  1996  060E  3EFF               	skipz
  1997  060F  1D03               	goto	u915
  1998  0610  2E0C               	movlw	(low((((_tecladoMatriz)-__stringbase)|8000h)))&0ffh
  1999  0611  3001               	addwf	0+(??_teclado+0)+0,w
  2000  0612  0770               	movwf	(??_teclado+1)+0
  2001  0613  00F1               	movf	(teclado@c),w
  2002  0614  0879               	addwf	0+(??_teclado+1)+0,w
  2003  0615  0771               	movwf	fsr0
  2004  0616  0084               	fcall	stringdir
  2005  0617  120A  118A  2003  120A  118A  	movwf	(??_teclado+2)+0
  2006  061C  00F2               	movf	(??_teclado+2)+0,w
  2007  061D  0872               	movwf	(teclado@aux)
  2008  061E  00F7               	goto	l1182
  2009  061F  2E20               	
  2010                           l109:	
  2011  0620                     	line	35
  2012                           	
  2013                           l1182:	
  2014  0620                     ;teclado.c: 35:         }
  2015                           	movlw	low(01h)
  2016  0620  3001               	movwf	(??_teclado+0)+0
  2017  0621  00F0               	movf	(??_teclado+0)+0,w
  2018  0622  0870               	addwf	(teclado@c),f
  2019  0623  07F9               	
  2020                           l1184:	
  2021  0624                     	movlw	low(04h)
  2022  0624  3004               	subwf	(teclado@c),w
  2023  0625  0279               	skipc
  2024  0626  1C03               	goto	u921
  2025  0627  2E29               	goto	u920
  2026  0628  2E2A               u921:
  2027  0629                     	goto	l1178
  2028  0629  2DED               u920:
  2029  062A                     	goto	l1186
  2030  062A  2E2B               	
  2031                           l108:	
  2032  062B                     	line	36
  2033                           	
  2034                           l1186:	
  2035  062B                     ;teclado.c: 36:     }
  2036                           	movlw	low(01h)
  2037  062B  3001               	movwf	(??_teclado+0)+0
  2038  062C  00F0               	movf	(??_teclado+0)+0,w
  2039  062D  0870               	addwf	(teclado@l),f
  2040  062E  07F8               	
  2041                           l1188:	
  2042  062F                     	movlw	low(04h)
  2043  062F  3004               	subwf	(teclado@l),w
  2044  0630  0278               	skipc
  2045  0631  1C03               	goto	u931
  2046  0632  2E34               	goto	u930
  2047  0633  2E35               u931:
  2048  0634                     	goto	l1170
  2049  0634  2DD6               u930:
  2050  0635                     	goto	l1190
  2051  0635  2E36               	
  2052                           l106:	
  2053  0636                     	line	37
  2054                           	
  2055                           l1190:	
  2056  0636                     ;teclado.c: 37:     return( aux );
  2057                           	movf	(teclado@aux),w
  2058  0636  0877               	goto	l110
  2059  0637  2E38               	
  2060                           l1192:	
  2061  0638                     	line	38
  2062                           	
  2063                           l110:	
  2064  0638                     	return
  2065  0638  0008               	opt stack 0
  2066                           GLOBAL	__end_of_teclado
  2067                           	__end_of_teclado:
  2068  0639                     	signat	_teclado,89
  2069                           	global	_stepmotor_init
  2070                           
  2071 ;; *************** function _stepmotor_init *****************
  2072 ;; Defined at:
  2073 ;;		line 21 in file "stepmotor.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  pulsosPorRev    2    0[COMMON] unsigned int 
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;		None
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      void 
  2080 ;; Registers used:
  2081 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2087 ;;      Params:         2       0       0       0       0
  2088 ;;      Locals:         0       0       0       0       0
  2089 ;;      Temps:          1       0       0       0       0
  2090 ;;      Totals:         3       0       0       0       0
  2091 ;;Total ram usage:        3 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; This function calls:
  2094 ;;		Nothing
  2095 ;; This function is called by:
  2096 ;;		_main
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2100                           	file	"stepmotor.c"
  2101                           	line	21
  2102                           global __ptext3
  2103                           __ptext3:	;psect for function _stepmotor_init
  2104  0477                     psect	text3
  2105                           	file	"stepmotor.c"
  2106                           	line	21
  2107                           	global	__size_of_stepmotor_init
  2108                           	__size_of_stepmotor_init	equ	__end_of_stepmotor_init-_stepmotor_init
  2109  0033                     	
  2110                           _stepmotor_init:	
  2111  0477                     ;incstack = 0
  2112                           	opt	stack 7
  2113                           ; Regs used in _stepmotor_init: [wreg-fsr0h+status,2+status,0]
  2114                           	line	23
  2115                           	
  2116                           l1154:	
  2117  0477                     ;stepmotor.c: 21: void stepmotor_init( unsigned int pulsosPorRevolucao );stepmotor.c: 22
                                 : {;stepmotor.c: 23:     TRISCbits.TRISC4 = 0; PORTCbits.RC4 = 0;
  2118                           	bsf	status, 5	;RP0=1, select bank1
  2119  0477  1683               	bcf	status, 6	;RP1=0, select bank1
  2120  0478  1303               	bcf	(135)^080h,4	;volatile
  2121  0479  1207               	bcf	status, 5	;RP0=0, select bank0
  2122  047A  1283               	bcf	status, 6	;RP1=0, select bank0
  2123  047B  1303               	bcf	(7),4	;volatile
  2124  047C  1207               	line	24
  2125                           ;stepmotor.c: 24:     TRISCbits.TRISC5 = 0; PORTCbits.RC5 = 0;
  2126                           	bsf	status, 5	;RP0=1, select bank1
  2127  047D  1683               	bcf	status, 6	;RP1=0, select bank1
  2128  047E  1303               	bcf	(135)^080h,5	;volatile
  2129  047F  1287               	bcf	status, 5	;RP0=0, select bank0
  2130  0480  1283               	bcf	status, 6	;RP1=0, select bank0
  2131  0481  1303               	bcf	(7),5	;volatile
  2132  0482  1287               	line	25
  2133                           ;stepmotor.c: 25:     TRISCbits.TRISC6 = 0; PORTCbits.RC6 = 0;
  2134                           	bsf	status, 5	;RP0=1, select bank1
  2135  0483  1683               	bcf	status, 6	;RP1=0, select bank1
  2136  0484  1303               	bcf	(135)^080h,6	;volatile
  2137  0485  1307               	bcf	status, 5	;RP0=0, select bank0
  2138  0486  1283               	bcf	status, 6	;RP1=0, select bank0
  2139  0487  1303               	bcf	(7),6	;volatile
  2140  0488  1307               	line	26
  2141                           ;stepmotor.c: 26:     TRISCbits.TRISC7 = 0; PORTCbits.RC7 = 0;
  2142                           	bsf	status, 5	;RP0=1, select bank1
  2143  0489  1683               	bcf	status, 6	;RP1=0, select bank1
  2144  048A  1303               	bcf	(135)^080h,7	;volatile
  2145  048B  1387               	bcf	status, 5	;RP0=0, select bank0
  2146  048C  1283               	bcf	status, 6	;RP1=0, select bank0
  2147  048D  1303               	bcf	(7),7	;volatile
  2148  048E  1387               	line	28
  2149                           	
  2150                           l1156:	
  2151  048F                     ;stepmotor.c: 28:     ppr = pulsosPorRevolucao;
  2152                           	movf	(stepmotor_init@pulsosPorRevolucao+1),w
  2153  048F  0871               	movwf	(_ppr+1)
  2154  0490  00CA               	movf	(stepmotor_init@pulsosPorRevolucao),w
  2155  0491  0870               	movwf	(_ppr)
  2156  0492  00C9               	line	29
  2157                           ;stepmotor.c: 29:     contador_passos = 0;
  2158                           	movlw	high highword(0)
  2159  0493  3000               	movwf	(_contador_passos+3)
  2160  0494  00C8               	movlw	low highword(0)
  2161  0495  3000               	movwf	(_contador_passos+2)
  2162  0496  00C7               	movlw	high(0)
  2163  0497  3000               	movwf	(_contador_passos+1)
  2164  0498  00C6               	movlw	low(0)
  2165  0499  3000               	movwf	(_contador_passos)
  2166  049A  00C5               
  2167                           	line	30
  2168                           	
  2169                           l1158:	
  2170  049B                     ;stepmotor.c: 30:     passo = 0;
  2171                           	clrf	(_passo)
  2172  049B  01CB               	line	31
  2173                           	
  2174                           l1160:	
  2175  049C                     ;stepmotor.c: 31:     PORTB &= 0xF0, PORTB |= ( motor[passo] & 0x0F);
  2176                           	movlw	low(0F0h)
  2177  049C  30F0               	movwf	(??_stepmotor_init+0)+0
  2178  049D  00F2               	movf	(??_stepmotor_init+0)+0,w
  2179  049E  0872               	andwf	(6),f	;volatile
  2180  049F  0586               	
  2181                           l1162:	
  2182  04A0                     	movf	(_passo),w
  2183  04A0  084B               	addlw	low(_motor|((0x0)<<8))&0ffh
  2184  04A1  3E3D               	movwf	fsr0
  2185  04A2  0084               	bcf	status, 7	;select IRP bank0
  2186  04A3  1383               	movf	indf,w
  2187  04A4  0800               	andlw	0Fh
  2188  04A5  390F               	movwf	(??_stepmotor_init+0)+0
  2189  04A6  00F2               	movf	(??_stepmotor_init+0)+0,w
  2190  04A7  0872               	iorwf	(6),f	;volatile
  2191  04A8  0486               	line	32
  2192                           	
  2193                           l129:	
  2194  04A9                     	return
  2195  04A9  0008               	opt stack 0
  2196                           GLOBAL	__end_of_stepmotor_init
  2197                           	__end_of_stepmotor_init:
  2198  04AA                     	signat	_stepmotor_init,4217
  2199                           	global	_stepmotor
  2200                           
  2201 ;; *************** function _stepmotor *****************
  2202 ;; Defined at:
  2203 ;;		line 35 in file "stepmotor.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  qtd_graus_pa    4   13[BANK0 ] unsigned long 
  2206 ;;  unidade         1   17[BANK0 ] unsigned char 
  2207 ;;  sentido         1   18[BANK0 ] unsigned char 
  2208 ;;  meio_passo      1   19[BANK0 ] unsigned char 
  2209 ;;  t               2   20[BANK0 ] unsigned int 
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;  passo_sentid    1   26[BANK0 ] unsigned char 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2221 ;;      Params:         0       9       0       0       0
  2222 ;;      Locals:         0       1       0       0       0
  2223 ;;      Temps:          0       4       0       0       0
  2224 ;;      Totals:         0      14       0       0       0
  2225 ;;Total ram usage:       14 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; Hardware stack levels required when called:    1
  2228 ;; This function calls:
  2229 ;;		___bmul
  2230 ;;		___lldiv
  2231 ;;		___lmul
  2232 ;;		_delay
  2233 ;; This function is called by:
  2234 ;;		_main
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  2238                           	line	35
  2239                           global __ptext4
  2240                           __ptext4:	;psect for function _stepmotor
  2241  0733                     psect	text4
  2242                           	file	"stepmotor.c"
  2243                           	line	35
  2244                           	global	__size_of_stepmotor
  2245                           	__size_of_stepmotor	equ	__end_of_stepmotor-_stepmotor
  2246  00B4                     	
  2247                           _stepmotor:	
  2248  0733                     ;incstack = 0
  2249                           	opt	stack 6
  2250                           ; Regs used in _stepmotor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2251                           	line	41
  2252                           	
  2253                           l1194:	
  2254  0733                     ;stepmotor.c: 35: void stepmotor(unsigned long qtd_graus_passos,;stepmotor.c: 36:       
                                          unsigned char unidade,;stepmotor.c: 37:                unsigned char sentido,;s
                                 tepmotor.c: 38:                unsigned char meio_passo,;stepmotor.c: 39:               
                                  unsigned int t );stepmotor.c: 40: {;stepmotor.c: 41:     char passo_sentido = 2;
  2255                           	movlw	low(02h)
  2256  0733  3002               	bcf	status, 5	;RP0=0, select bank0
  2257  0734  1283               	bcf	status, 6	;RP1=0, select bank0
  2258  0735  1303               	movwf	(??_stepmotor+0)+0
  2259  0736  00B6               	movf	(??_stepmotor+0)+0,w
  2260  0737  0836               	movwf	(stepmotor@passo_sentido)
  2261  0738  00BA               	line	43
  2262                           	
  2263                           l1196:	
  2264  0739                     ;stepmotor.c: 43:     if( unidade == 0 )
  2265                           	movf	((stepmotor@unidade)),w
  2266  0739  0831               	btfss	status,2
  2267  073A  1D03               	goto	u941
  2268  073B  2F3D               	goto	u940
  2269  073C  2F3E               u941:
  2270  073D                     	goto	l1200
  2271  073D  2F73               u940:
  2272  073E                     	line	44
  2273                           	
  2274                           l1198:	
  2275  073E                     ;stepmotor.c: 44:         contador_passos = (qtd_graus_passos * ppr) / 360;
  2276                           	movlw	0
  2277  073E  3000               	movwf	(___lldiv@divisor+3)
  2278  073F  00A3               	movlw	0
  2279  0740  3000               	movwf	(___lldiv@divisor+2)
  2280  0741  00A2               	movlw	01h
  2281  0742  3001               	movwf	(___lldiv@divisor+1)
  2282  0743  00A1               	movlw	068h
  2283  0744  3068               	movwf	(___lldiv@divisor)
  2284  0745  00A0               
  2285                           	movf	(_ppr),w
  2286  0746  0849               	movwf	(___lmul@multiplier)
  2287  0747  00F0               	movf	(_ppr+1),w
  2288  0748  084A               	movwf	((___lmul@multiplier))+1
  2289  0749  00F1               	clrf	2+((___lmul@multiplier))
  2290  074A  01F2               	clrf	3+((___lmul@multiplier))
  2291  074B  01F3               	movf	(stepmotor@qtd_graus_passos+3),w
  2292  074C  0830               	movwf	(___lmul@multiplicand+3)
  2293  074D  00F7               	movf	(stepmotor@qtd_graus_passos+2),w
  2294  074E  082F               	movwf	(___lmul@multiplicand+2)
  2295  074F  00F6               	movf	(stepmotor@qtd_graus_passos+1),w
  2296  0750  082E               	movwf	(___lmul@multiplicand+1)
  2297  0751  00F5               	movf	(stepmotor@qtd_graus_passos),w
  2298  0752  082D               	movwf	(___lmul@multiplicand)
  2299  0753  00F4               
  2300                           	fcall	___lmul
  2301  0754  120A  118A  251F  120A  118A  	movf	(3+(?___lmul)),w
  2302  0759  0873               	bcf	status, 5	;RP0=0, select bank0
  2303  075A  1283               	bcf	status, 6	;RP1=0, select bank0
  2304  075B  1303               	movwf	(___lldiv@dividend+3)
  2305  075C  00A7               	movf	(2+(?___lmul)),w
  2306  075D  0872               	movwf	(___lldiv@dividend+2)
  2307  075E  00A6               	movf	(1+(?___lmul)),w
  2308  075F  0871               	movwf	(___lldiv@dividend+1)
  2309  0760  00A5               	movf	(0+(?___lmul)),w
  2310  0761  0870               	movwf	(___lldiv@dividend)
  2311  0762  00A4               
  2312                           	fcall	___lldiv
  2313  0763  120A  118A  2639  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2314  0768  1283               	bcf	status, 6	;RP1=0, select bank0
  2315  0769  1303               	movf	(3+(?___lldiv)),w
  2316  076A  0823               	movwf	(_contador_passos+3)
  2317  076B  00C8               	movf	(2+(?___lldiv)),w
  2318  076C  0822               	movwf	(_contador_passos+2)
  2319  076D  00C7               	movf	(1+(?___lldiv)),w
  2320  076E  0821               	movwf	(_contador_passos+1)
  2321  076F  00C6               	movf	(0+(?___lldiv)),w
  2322  0770  0820               	movwf	(_contador_passos)
  2323  0771  00C5               
  2324                           	goto	l1202
  2325  0772  2F7C               	line	45
  2326                           ;stepmotor.c: 45:     else
  2327                           	
  2328                           l132:	
  2329  0773                     	line	46
  2330                           	
  2331                           l1200:	
  2332  0773                     ;stepmotor.c: 46:         contador_passos = qtd_graus_passos;
  2333                           	movf	(stepmotor@qtd_graus_passos+3),w
  2334  0773  0830               	movwf	(_contador_passos+3)
  2335  0774  00C8               	movf	(stepmotor@qtd_graus_passos+2),w
  2336  0775  082F               	movwf	(_contador_passos+2)
  2337  0776  00C7               	movf	(stepmotor@qtd_graus_passos+1),w
  2338  0777  082E               	movwf	(_contador_passos+1)
  2339  0778  00C6               	movf	(stepmotor@qtd_graus_passos),w
  2340  0779  082D               	movwf	(_contador_passos)
  2341  077A  00C5               
  2342                           	goto	l1202
  2343  077B  2F7C               	
  2344                           l133:	
  2345  077C                     	line	48
  2346                           	
  2347                           l1202:	
  2348  077C                     ;stepmotor.c: 48:     if( meio_passo == 1 )
  2349                           		decf	((stepmotor@meio_passo)),w
  2350  077C  0333               	btfss	status,2
  2351  077D  1D03               	goto	u951
  2352  077E  2F80               	goto	u950
  2353  077F  2F81               u951:
  2354  0780                     	goto	l134
  2355  0780  2F8C               u950:
  2356  0781                     	line	50
  2357                           	
  2358                           l1204:	
  2359  0781                     ;stepmotor.c: 49:     {;stepmotor.c: 50:         contador_passos *= 2;
  2360                           	movlw	01h
  2361  0781  3001               	movwf	(??_stepmotor+0)+0
  2362  0782  00B6               u965:
  2363  0783                     	clrc
  2364  0783  1003               	rlf	(_contador_passos),f
  2365  0784  0DC5               	rlf	(_contador_passos+1),f
  2366  0785  0DC6               	rlf	(_contador_passos+2),f
  2367  0786  0DC7               	rlf	(_contador_passos+3),f
  2368  0787  0DC8               	decfsz	(??_stepmotor+0)+0
  2369  0788  0BB6               	goto	u965
  2370  0789  2F83               	line	51
  2371                           	
  2372                           l1206:	
  2373  078A                     ;stepmotor.c: 51:         passo_sentido = 1;
  2374                           	clrf	(stepmotor@passo_sentido)
  2375  078A  01BA               	incf	(stepmotor@passo_sentido),f
  2376  078B  0ABA               	line	52
  2377                           ;stepmotor.c: 52:     }
  2378                           	
  2379                           l134:	
  2380  078C                     	line	54
  2381                           ;stepmotor.c: 54:     if( sentido == 1 )
  2382                           		decf	((stepmotor@sentido)),w
  2383  078C  0332               	btfss	status,2
  2384  078D  1D03               	goto	u971
  2385  078E  2F90               	goto	u970
  2386  078F  2F91               u971:
  2387  0790                     	goto	l1218
  2388  0790  2FDB               u970:
  2389  0791                     	line	55
  2390                           	
  2391                           l1208:	
  2392  0791                     ;stepmotor.c: 55:         passo_sentido *= -1;
  2393                           	movf	(stepmotor@passo_sentido),w
  2394  0791  083A               	movwf	(??_stepmotor+0)+0
  2395  0792  00B6               	movf	(??_stepmotor+0)+0,w
  2396  0793  0836               	movwf	(___bmul@multiplicand)
  2397  0794  00F0               	movlw	low(0FFh)
  2398  0795  30FF               	fcall	___bmul
  2399  0796  120A  118A  242B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2400  079B  1283               	bcf	status, 6	;RP1=0, select bank0
  2401  079C  1303               	movwf	(??_stepmotor+1)+0
  2402  079D  00B7               	movf	(??_stepmotor+1)+0,w
  2403  079E  0837               	movwf	(stepmotor@passo_sentido)
  2404  079F  00BA               	goto	l1218
  2405  07A0  2FDB               	
  2406                           l135:	
  2407  07A1                     	line	57
  2408                           ;stepmotor.c: 57:     while( contador_passos )
  2409                           	goto	l1218
  2410  07A1  2FDB               	
  2411                           l137:	
  2412  07A2                     	line	59
  2413                           	
  2414                           l1210:	
  2415  07A2                     ;stepmotor.c: 58:     {;stepmotor.c: 59:         passo = (passo + passo_sentido) % 8;
  2416                           	movf	(stepmotor@passo_sentido),w
  2417  07A2  083A               	addwf	(_passo),w
  2418  07A3  074B               	andlw	07h
  2419  07A4  3907               	movwf	(??_stepmotor+0)+0
  2420  07A5  00B6               	movf	(??_stepmotor+0)+0,w
  2421  07A6  0836               	movwf	(_passo)
  2422  07A7  00CB               	line	60
  2423                           ;stepmotor.c: 60:         PORTB &= 0xF0, PORTB |= ( motor[passo] & 0x0F);
  2424                           	movlw	low(0F0h)
  2425  07A8  30F0               	movwf	(??_stepmotor+0)+0
  2426  07A9  00B6               	movf	(??_stepmotor+0)+0,w
  2427  07AA  0836               	andwf	(6),f	;volatile
  2428  07AB  0586               	
  2429                           l1212:	
  2430  07AC                     	movf	(_passo),w
  2431  07AC  084B               	addlw	low(_motor|((0x0)<<8))&0ffh
  2432  07AD  3E3D               	movwf	fsr0
  2433  07AE  0084               	bcf	status, 7	;select IRP bank0
  2434  07AF  1383               	movf	indf,w
  2435  07B0  0800               	andlw	0Fh
  2436  07B1  390F               	movwf	(??_stepmotor+0)+0
  2437  07B2  00B6               	movf	(??_stepmotor+0)+0,w
  2438  07B3  0836               	iorwf	(6),f	;volatile
  2439  07B4  0486               	line	61
  2440                           	
  2441                           l1214:	
  2442  07B5                     ;stepmotor.c: 61:         --contador_passos;
  2443                           	movlw	01h
  2444  07B5  3001               	movwf	((??_stepmotor+0)+0)
  2445  07B6  00B6               	movlw	0
  2446  07B7  3000               	movwf	((??_stepmotor+0)+0+1)
  2447  07B8  00B7               	movlw	0
  2448  07B9  3000               	movwf	((??_stepmotor+0)+0+2)
  2449  07BA  00B8               	movlw	0
  2450  07BB  3000               	movwf	((??_stepmotor+0)+0+3)
  2451  07BC  00B9               	movf	0+(??_stepmotor+0)+0,w
  2452  07BD  0836               	subwf	(_contador_passos),f
  2453  07BE  02C5               	movf	1+(??_stepmotor+0)+0,w
  2454  07BF  0837               	skipc
  2455  07C0  1C03               	incfsz	1+(??_stepmotor+0)+0,w
  2456  07C1  0F37               	goto	u985
  2457  07C2  2FC4               	goto	u986
  2458  07C3  2FC5               u985:
  2459  07C4                     	subwf	(_contador_passos+1),f
  2460  07C4  02C6               u986:
  2461  07C5                     	movf	2+(??_stepmotor+0)+0,w
  2462  07C5  0838               	skipc
  2463  07C6  1C03               	incfsz	2+(??_stepmotor+0)+0,w
  2464  07C7  0F38               	goto	u987
  2465  07C8  2FCA               	goto	u988
  2466  07C9  2FCB               u987:
  2467  07CA                     	subwf	(_contador_passos+2),f
  2468  07CA  02C7               u988:
  2469  07CB                     	movf	3+(??_stepmotor+0)+0,w
  2470  07CB  0839               	skipc
  2471  07CC  1C03               	incfsz	3+(??_stepmotor+0)+0,w
  2472  07CD  0F39               	goto	u989
  2473  07CE  2FD0               	goto	u980
  2474  07CF  2FD1               u989:
  2475  07D0                     	subwf	(_contador_passos+3),f
  2476  07D0  02C8               u980:
  2477  07D1                     
  2478                           	line	62
  2479                           	
  2480                           l1216:	
  2481  07D1                     ;stepmotor.c: 62:         delay( t );
  2482                           	movf	(stepmotor@t+1),w
  2483  07D1  0835               	movwf	(delay@t+1)
  2484  07D2  00F1               	movf	(stepmotor@t),w
  2485  07D3  0834               	movwf	(delay@t)
  2486  07D4  00F0               	fcall	_delay
  2487  07D5  120A  118A  2414  120A  118A  	goto	l1218
  2488  07DA  2FDB               	line	63
  2489                           ;stepmotor.c: 63:     }
  2490                           	
  2491                           l136:	
  2492  07DB                     	line	57
  2493                           	
  2494                           l1218:	
  2495  07DB                     ;stepmotor.c: 57:     while( contador_passos )
  2496                           	bcf	status, 5	;RP0=0, select bank0
  2497  07DB  1283               	bcf	status, 6	;RP1=0, select bank0
  2498  07DC  1303               	movf	(_contador_passos+3),w
  2499  07DD  0848               	iorwf	(_contador_passos+2),w
  2500  07DE  0447               	iorwf	(_contador_passos+1),w
  2501  07DF  0446               	iorwf	(_contador_passos),w
  2502  07E0  0445               	skipz
  2503  07E1  1D03               	goto	u991
  2504  07E2  2FE4               	goto	u990
  2505  07E3  2FE5               u991:
  2506  07E4                     	goto	l1210
  2507  07E4  2FA2               u990:
  2508  07E5                     	goto	l139
  2509  07E5  2FE6               	
  2510                           l138:	
  2511  07E6                     	line	64
  2512                           	
  2513                           l139:	
  2514  07E6                     	return
  2515  07E6  0008               	opt stack 0
  2516                           GLOBAL	__end_of_stepmotor
  2517                           	__end_of_stepmotor:
  2518  07E7                     	signat	_stepmotor,20601
  2519                           	global	___lmul
  2520                           
  2521 ;; *************** function ___lmul *****************
  2522 ;; Defined at:
  2523 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  multiplier      4    0[COMMON] unsigned long 
  2526 ;;  multiplicand    4    4[COMMON] unsigned long 
  2527 ;; Auto vars:     Size  Location     Type
  2528 ;;  product         4    9[COMMON] unsigned long 
  2529 ;; Return value:  Size  Location     Type
  2530 ;;                  4    0[COMMON] unsigned long 
  2531 ;; Registers used:
  2532 ;;		wreg, status,2, status,0
  2533 ;; Tracked objects:
  2534 ;;		On entry : 0/0
  2535 ;;		On exit  : 0/0
  2536 ;;		Unchanged: 0/0
  2537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2538 ;;      Params:         8       0       0       0       0
  2539 ;;      Locals:         4       0       0       0       0
  2540 ;;      Temps:          1       0       0       0       0
  2541 ;;      Totals:        13       0       0       0       0
  2542 ;;Total ram usage:       13 bytes
  2543 ;; Hardware stack levels used:    1
  2544 ;; This function calls:
  2545 ;;		Nothing
  2546 ;; This function is called by:
  2547 ;;		_stepmotor
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  2551                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  2552                           	line	15
  2553                           global __ptext5
  2554                           __ptext5:	;psect for function ___lmul
  2555  051F                     psect	text5
  2556                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
  2557                           	line	15
  2558                           	global	__size_of___lmul
  2559                           	__size_of___lmul	equ	__end_of___lmul-___lmul
  2560  004A                     	
  2561                           ___lmul:	
  2562  051F                     ;incstack = 0
  2563                           	opt	stack 6
  2564                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2565                           	line	119
  2566                           	
  2567                           l1064:	
  2568  051F                     	movlw	high highword(0)
  2569  051F  3000               	movwf	(___lmul@product+3)
  2570  0520  00FC               	movlw	low highword(0)
  2571  0521  3000               	movwf	(___lmul@product+2)
  2572  0522  00FB               	movlw	high(0)
  2573  0523  3000               	movwf	(___lmul@product+1)
  2574  0524  00FA               	movlw	low(0)
  2575  0525  3000               	movwf	(___lmul@product)
  2576  0526  00F9               
  2577                           	goto	l1066
  2578  0527  2D28               	line	120
  2579                           	
  2580                           l236:	
  2581  0528                     	line	121
  2582                           	
  2583                           l1066:	
  2584  0528                     	btfss	(___lmul@multiplier),(0)&7
  2585  0528  1C70               	goto	u711
  2586  0529  2D2B               	goto	u710
  2587  052A  2D2C               u711:
  2588  052B                     	goto	l1070
  2589  052B  2D44               u710:
  2590  052C                     	line	122
  2591                           	
  2592                           l1068:	
  2593  052C                     	movf	(___lmul@multiplicand),w
  2594  052C  0874               	addwf	(___lmul@product),f
  2595  052D  07F9               	movf	(___lmul@multiplicand+1),w
  2596  052E  0875               	clrz
  2597  052F  1103               	skipnc
  2598  0530  1803               	addlw	1
  2599  0531  3E01               	skipnz
  2600  0532  1903               	goto	u721
  2601  0533  2D35               	addwf	(___lmul@product+1),f
  2602  0534  07FA               u721:
  2603  0535                     	movf	(___lmul@multiplicand+2),w
  2604  0535  0876               	clrz
  2605  0536  1103               	skipnc
  2606  0537  1803               	addlw	1
  2607  0538  3E01               	skipnz
  2608  0539  1903               	goto	u722
  2609  053A  2D3C               	addwf	(___lmul@product+2),f
  2610  053B  07FB               u722:
  2611  053C                     	movf	(___lmul@multiplicand+3),w
  2612  053C  0877               	clrz
  2613  053D  1103               	skipnc
  2614  053E  1803               	addlw	1
  2615  053F  3E01               	skipnz
  2616  0540  1903               	goto	u723
  2617  0541  2D43               	addwf	(___lmul@product+3),f
  2618  0542  07FC               u723:
  2619  0543                     
  2620                           	goto	l1070
  2621  0543  2D44               	
  2622                           l237:	
  2623  0544                     	line	123
  2624                           	
  2625                           l1070:	
  2626  0544                     	movlw	01h
  2627  0544  3001               	movwf	(??___lmul+0)+0
  2628  0545  00F8               u735:
  2629  0546                     	clrc
  2630  0546  1003               	rlf	(___lmul@multiplicand),f
  2631  0547  0DF4               	rlf	(___lmul@multiplicand+1),f
  2632  0548  0DF5               	rlf	(___lmul@multiplicand+2),f
  2633  0549  0DF6               	rlf	(___lmul@multiplicand+3),f
  2634  054A  0DF7               	decfsz	(??___lmul+0)+0
  2635  054B  0BF8               	goto	u735
  2636  054C  2D46               	line	124
  2637                           	
  2638                           l1072:	
  2639  054D                     	movlw	01h
  2640  054D  3001               u745:
  2641  054E                     	clrc
  2642  054E  1003               	rrf	(___lmul@multiplier+3),f
  2643  054F  0CF3               	rrf	(___lmul@multiplier+2),f
  2644  0550  0CF2               	rrf	(___lmul@multiplier+1),f
  2645  0551  0CF1               	rrf	(___lmul@multiplier),f
  2646  0552  0CF0               	addlw	-1
  2647  0553  3EFF               	skipz
  2648  0554  1D03               	goto	u745
  2649  0555  2D4E               
  2650                           	line	125
  2651                           	movf	(___lmul@multiplier+3),w
  2652  0556  0873               	iorwf	(___lmul@multiplier+2),w
  2653  0557  0472               	iorwf	(___lmul@multiplier+1),w
  2654  0558  0471               	iorwf	(___lmul@multiplier),w
  2655  0559  0470               	skipz
  2656  055A  1D03               	goto	u751
  2657  055B  2D5D               	goto	u750
  2658  055C  2D5E               u751:
  2659  055D                     	goto	l1066
  2660  055D  2D28               u750:
  2661  055E                     	goto	l1074
  2662  055E  2D5F               	
  2663                           l238:	
  2664  055F                     	line	128
  2665                           	
  2666                           l1074:	
  2667  055F                     	movf	(___lmul@product+3),w
  2668  055F  087C               	movwf	(?___lmul+3)
  2669  0560  00F3               	movf	(___lmul@product+2),w
  2670  0561  087B               	movwf	(?___lmul+2)
  2671  0562  00F2               	movf	(___lmul@product+1),w
  2672  0563  087A               	movwf	(?___lmul+1)
  2673  0564  00F1               	movf	(___lmul@product),w
  2674  0565  0879               	movwf	(?___lmul)
  2675  0566  00F0               
  2676                           	goto	l239
  2677  0567  2D68               	
  2678                           l1076:	
  2679  0568                     	line	129
  2680                           	
  2681                           l239:	
  2682  0568                     	return
  2683  0568  0008               	opt stack 0
  2684                           GLOBAL	__end_of___lmul
  2685                           	__end_of___lmul:
  2686  0569                     	signat	___lmul,8316
  2687                           	global	___lldiv
  2688                           
  2689 ;; *************** function ___lldiv *****************
  2690 ;; Defined at:
  2691 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  divisor         4    0[BANK0 ] unsigned long 
  2694 ;;  dividend        4    4[BANK0 ] unsigned long 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;  quotient        4    8[BANK0 ] unsigned long 
  2697 ;;  counter         1   12[BANK0 ] unsigned char 
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  4    0[BANK0 ] unsigned long 
  2700 ;; Registers used:
  2701 ;;		wreg, status,2, status,0
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2707 ;;      Params:         0       8       0       0       0
  2708 ;;      Locals:         0       5       0       0       0
  2709 ;;      Temps:          1       0       0       0       0
  2710 ;;      Totals:         1      13       0       0       0
  2711 ;;Total ram usage:       14 bytes
  2712 ;; Hardware stack levels used:    1
  2713 ;; This function calls:
  2714 ;;		Nothing
  2715 ;; This function is called by:
  2716 ;;		_stepmotor
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           psect	text6,local,class=CODE,delta=2,merge=1,group=1
  2720                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  2721                           	line	5
  2722                           global __ptext6
  2723                           __ptext6:	;psect for function ___lldiv
  2724  0639                     psect	text6
  2725                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  2726                           	line	5
  2727                           	global	__size_of___lldiv
  2728                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  2729  006F                     	
  2730                           ___lldiv:	
  2731  0639                     ;incstack = 0
  2732                           	opt	stack 6
  2733                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2734                           	line	13
  2735                           	
  2736                           l1092:	
  2737  0639                     	movlw	high highword(0)
  2738  0639  3000               	bcf	status, 5	;RP0=0, select bank0
  2739  063A  1283               	bcf	status, 6	;RP1=0, select bank0
  2740  063B  1303               	movwf	(___lldiv@quotient+3)
  2741  063C  00AB               	movlw	low highword(0)
  2742  063D  3000               	movwf	(___lldiv@quotient+2)
  2743  063E  00AA               	movlw	high(0)
  2744  063F  3000               	movwf	(___lldiv@quotient+1)
  2745  0640  00A9               	movlw	low(0)
  2746  0641  3000               	movwf	(___lldiv@quotient)
  2747  0642  00A8               
  2748                           	line	14
  2749                           	movf	(___lldiv@divisor+3),w
  2750  0643  0823               	iorwf	(___lldiv@divisor+2),w
  2751  0644  0422               	iorwf	(___lldiv@divisor+1),w
  2752  0645  0421               	iorwf	(___lldiv@divisor),w
  2753  0646  0420               	skipnz
  2754  0647  1903               	goto	u781
  2755  0648  2E4A               	goto	u780
  2756  0649  2E4B               u781:
  2757  064A                     	goto	l1112
  2758  064A  2E9E               u780:
  2759  064B                     	line	15
  2760                           	
  2761                           l1094:	
  2762  064B                     	clrf	(___lldiv@counter)
  2763  064B  01AC               	incf	(___lldiv@counter),f
  2764  064C  0AAC               	line	16
  2765                           	goto	l1098
  2766  064D  2E5C               	
  2767                           l256:	
  2768  064E                     	line	17
  2769                           	
  2770                           l1096:	
  2771  064E                     	movlw	01h
  2772  064E  3001               	movwf	(??___lldiv+0)+0
  2773  064F  00FD               u795:
  2774  0650                     	clrc
  2775  0650  1003               	rlf	(___lldiv@divisor),f
  2776  0651  0DA0               	rlf	(___lldiv@divisor+1),f
  2777  0652  0DA1               	rlf	(___lldiv@divisor+2),f
  2778  0653  0DA2               	rlf	(___lldiv@divisor+3),f
  2779  0654  0DA3               	decfsz	(??___lldiv+0)+0
  2780  0655  0BFD               	goto	u795
  2781  0656  2E50               	line	18
  2782                           	movlw	low(01h)
  2783  0657  3001               	movwf	(??___lldiv+0)+0
  2784  0658  00FD               	movf	(??___lldiv+0)+0,w
  2785  0659  087D               	addwf	(___lldiv@counter),f
  2786  065A  07AC               	goto	l1098
  2787  065B  2E5C               	line	19
  2788                           	
  2789                           l255:	
  2790  065C                     	line	16
  2791                           	
  2792                           l1098:	
  2793  065C                     	btfss	(___lldiv@divisor+3),(31)&7
  2794  065C  1FA3               	goto	u801
  2795  065D  2E5F               	goto	u800
  2796  065E  2E60               u801:
  2797  065F                     	goto	l1096
  2798  065F  2E4E               u800:
  2799  0660                     	goto	l1100
  2800  0660  2E62               	
  2801                           l257:	
  2802  0661                     	goto	l1100
  2803  0661  2E62               	line	20
  2804                           	
  2805                           l258:	
  2806  0662                     	line	21
  2807                           	
  2808                           l1100:	
  2809  0662                     	movlw	01h
  2810  0662  3001               	movwf	(??___lldiv+0)+0
  2811  0663  00FD               u815:
  2812  0664                     	clrc
  2813  0664  1003               	rlf	(___lldiv@quotient),f
  2814  0665  0DA8               	rlf	(___lldiv@quotient+1),f
  2815  0666  0DA9               	rlf	(___lldiv@quotient+2),f
  2816  0667  0DAA               	rlf	(___lldiv@quotient+3),f
  2817  0668  0DAB               	decfsz	(??___lldiv+0)+0
  2818  0669  0BFD               	goto	u815
  2819  066A  2E64               	line	22
  2820                           	
  2821                           l1102:	
  2822  066B                     	movf	(___lldiv@divisor+3),w
  2823  066B  0823               	subwf	(___lldiv@dividend+3),w
  2824  066C  0227               	skipz
  2825  066D  1D03               	goto	u825
  2826  066E  2E79               	movf	(___lldiv@divisor+2),w
  2827  066F  0822               	subwf	(___lldiv@dividend+2),w
  2828  0670  0226               	skipz
  2829  0671  1D03               	goto	u825
  2830  0672  2E79               	movf	(___lldiv@divisor+1),w
  2831  0673  0821               	subwf	(___lldiv@dividend+1),w
  2832  0674  0225               	skipz
  2833  0675  1D03               	goto	u825
  2834  0676  2E79               	movf	(___lldiv@divisor),w
  2835  0677  0820               	subwf	(___lldiv@dividend),w
  2836  0678  0224               u825:
  2837  0679                     	skipc
  2838  0679  1C03               	goto	u821
  2839  067A  2E7C               	goto	u820
  2840  067B  2E7D               u821:
  2841  067C                     	goto	l1108
  2842  067C  2E8D               u820:
  2843  067D                     	line	23
  2844                           	
  2845                           l1104:	
  2846  067D                     	movf	(___lldiv@divisor),w
  2847  067D  0820               	subwf	(___lldiv@dividend),f
  2848  067E  02A4               	movf	(___lldiv@divisor+1),w
  2849  067F  0821               	skipc
  2850  0680  1C03               	incfsz	(___lldiv@divisor+1),w
  2851  0681  0F21               	subwf	(___lldiv@dividend+1),f
  2852  0682  02A5               	movf	(___lldiv@divisor+2),w
  2853  0683  0822               	skipc
  2854  0684  1C03               	incfsz	(___lldiv@divisor+2),w
  2855  0685  0F22               	subwf	(___lldiv@dividend+2),f
  2856  0686  02A6               	movf	(___lldiv@divisor+3),w
  2857  0687  0823               	skipc
  2858  0688  1C03               	incfsz	(___lldiv@divisor+3),w
  2859  0689  0F23               	subwf	(___lldiv@dividend+3),f
  2860  068A  02A7               	line	24
  2861                           	
  2862                           l1106:	
  2863  068B                     	bsf	(___lldiv@quotient)+(0/8),(0)&7
  2864  068B  1428               	goto	l1108
  2865  068C  2E8D               	line	25
  2866                           	
  2867                           l259:	
  2868  068D                     	line	26
  2869                           	
  2870                           l1108:	
  2871  068D                     	movlw	01h
  2872  068D  3001               u835:
  2873  068E                     	clrc
  2874  068E  1003               	rrf	(___lldiv@divisor+3),f
  2875  068F  0CA3               	rrf	(___lldiv@divisor+2),f
  2876  0690  0CA2               	rrf	(___lldiv@divisor+1),f
  2877  0691  0CA1               	rrf	(___lldiv@divisor),f
  2878  0692  0CA0               	addlw	-1
  2879  0693  3EFF               	skipz
  2880  0694  1D03               	goto	u835
  2881  0695  2E8E               
  2882                           	line	27
  2883                           	
  2884                           l1110:	
  2885  0696                     	movlw	01h
  2886  0696  3001               	subwf	(___lldiv@counter),f
  2887  0697  02AC               	btfss	status,2
  2888  0698  1D03               	goto	u841
  2889  0699  2E9B               	goto	u840
  2890  069A  2E9C               u841:
  2891  069B                     	goto	l1100
  2892  069B  2E62               u840:
  2893  069C                     	goto	l1112
  2894  069C  2E9E               	
  2895                           l260:	
  2896  069D                     	goto	l1112
  2897  069D  2E9E               	line	28
  2898                           	
  2899                           l254:	
  2900  069E                     	line	29
  2901                           	
  2902                           l1112:	
  2903  069E                     	movf	(___lldiv@quotient+3),w
  2904  069E  082B               	movwf	(?___lldiv+3)
  2905  069F  00A3               	movf	(___lldiv@quotient+2),w
  2906  06A0  082A               	movwf	(?___lldiv+2)
  2907  06A1  00A2               	movf	(___lldiv@quotient+1),w
  2908  06A2  0829               	movwf	(?___lldiv+1)
  2909  06A3  00A1               	movf	(___lldiv@quotient),w
  2910  06A4  0828               	movwf	(?___lldiv)
  2911  06A5  00A0               
  2912                           	goto	l261
  2913  06A6  2EA7               	
  2914                           l1114:	
  2915  06A7                     	line	30
  2916                           	
  2917                           l261:	
  2918  06A7                     	return
  2919  06A7  0008               	opt stack 0
  2920                           GLOBAL	__end_of___lldiv
  2921                           	__end_of___lldiv:
  2922  06A8                     	signat	___lldiv,8316
  2923                           	global	___bmul
  2924                           
  2925 ;; *************** function ___bmul *****************
  2926 ;; Defined at:
  2927 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  multiplier      1    wreg     unsigned char 
  2930 ;;  multiplicand    1    0[COMMON] unsigned char 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;  multiplier      1    3[COMMON] unsigned char 
  2933 ;;  product         1    2[COMMON] unsigned char 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  1    wreg      unsigned char 
  2936 ;; Registers used:
  2937 ;;		wreg, status,2, status,0
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2943 ;;      Params:         1       0       0       0       0
  2944 ;;      Locals:         2       0       0       0       0
  2945 ;;      Temps:          1       0       0       0       0
  2946 ;;      Totals:         4       0       0       0       0
  2947 ;;Total ram usage:        4 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; This function calls:
  2950 ;;		Nothing
  2951 ;; This function is called by:
  2952 ;;		_stepmotor
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           psect	text7,local,class=CODE,delta=2,merge=1,group=1
  2956                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  2957                           	line	4
  2958                           global __ptext7
  2959                           __ptext7:	;psect for function ___bmul
  2960  042B                     psect	text7
  2961                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8.c"
  2962                           	line	4
  2963                           	global	__size_of___bmul
  2964                           	__size_of___bmul	equ	__end_of___bmul-___bmul
  2965  0019                     	
  2966                           ___bmul:	
  2967  042B                     ;incstack = 0
  2968                           	opt	stack 6
  2969                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2970                           ;___bmul@multiplier stored from wreg
  2971                           	movwf	(___bmul@multiplier)
  2972  042B  00F3               	line	6
  2973                           	
  2974                           l1078:	
  2975  042C                     	clrf	(___bmul@product)
  2976  042C  01F2               	goto	l1080
  2977  042D  2C2E               	line	42
  2978                           	
  2979                           l248:	
  2980  042E                     	line	43
  2981                           	
  2982                           l1080:	
  2983  042E                     	btfss	(___bmul@multiplier),(0)&7
  2984  042E  1C73               	goto	u761
  2985  042F  2C31               	goto	u760
  2986  0430  2C32               u761:
  2987  0431                     	goto	l1084
  2988  0431  2C37               u760:
  2989  0432                     	line	44
  2990                           	
  2991                           l1082:	
  2992  0432                     	movf	(___bmul@multiplicand),w
  2993  0432  0870               	movwf	(??___bmul+0)+0
  2994  0433  00F1               	movf	(??___bmul+0)+0,w
  2995  0434  0871               	addwf	(___bmul@product),f
  2996  0435  07F2               	goto	l1084
  2997  0436  2C37               	
  2998                           l249:	
  2999  0437                     	line	45
  3000                           	
  3001                           l1084:	
  3002  0437                     	clrc
  3003  0437  1003               	rlf	(___bmul@multiplicand),f
  3004  0438  0DF0               
  3005                           	line	46
  3006                           	
  3007                           l1086:	
  3008  0439                     	clrc
  3009  0439  1003               	rrf	(___bmul@multiplier),f
  3010  043A  0CF3               
  3011                           	line	47
  3012                           	movf	((___bmul@multiplier)),w
  3013  043B  0873               	btfss	status,2
  3014  043C  1D03               	goto	u771
  3015  043D  2C3F               	goto	u770
  3016  043E  2C40               u771:
  3017  043F                     	goto	l1080
  3018  043F  2C2E               u770:
  3019  0440                     	goto	l1088
  3020  0440  2C41               	
  3021                           l250:	
  3022  0441                     	line	50
  3023                           	
  3024                           l1088:	
  3025  0441                     	movf	(___bmul@product),w
  3026  0441  0872               	goto	l251
  3027  0442  2C43               	
  3028                           l1090:	
  3029  0443                     	line	51
  3030                           	
  3031                           l251:	
  3032  0443                     	return
  3033  0443  0008               	opt stack 0
  3034                           GLOBAL	__end_of___bmul
  3035                           	__end_of___bmul:
  3036  0444                     	signat	___bmul,8313
  3037                           	global	_lcd_print
  3038                           
  3039 ;; *************** function _lcd_print *****************
  3040 ;; Defined at:
  3041 ;;		line 156 in file "lcd.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;  lin             1    wreg     unsigned char 
  3044 ;;  col             1    6[COMMON] unsigned char 
  3045 ;;  str             1    7[COMMON] PTR const unsigned char 
  3046 ;;		 -> STR_2(14), STR_1(16), 
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;  lin             1   10[COMMON] unsigned char 
  3049 ;;  pos             1    9[COMMON] unsigned char 
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3059 ;;      Params:         2       0       0       0       0
  3060 ;;      Locals:         2       0       0       0       0
  3061 ;;      Temps:          1       0       0       0       0
  3062 ;;      Totals:         5       0       0       0       0
  3063 ;;Total ram usage:        5 bytes
  3064 ;; Hardware stack levels used:    1
  3065 ;; Hardware stack levels required when called:    2
  3066 ;; This function calls:
  3067 ;;		_lcd_dataReg
  3068 ;;		_lcd_lincol
  3069 ;; This function is called by:
  3070 ;;		_main
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3074                           	file	"lcd.c"
  3075                           	line	156
  3076                           global __ptext8
  3077                           __ptext8:	;psect for function _lcd_print
  3078  0444                     psect	text8
  3079                           	file	"lcd.c"
  3080                           	line	156
  3081                           	global	__size_of_lcd_print
  3082                           	__size_of_lcd_print	equ	__end_of_lcd_print-_lcd_print
  3083  0033                     	
  3084                           _lcd_print:	
  3085  0444                     ;incstack = 0
  3086                           	opt	stack 5
  3087                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3088                           ;lcd_print@lin stored from wreg
  3089                           	movwf	(lcd_print@lin)
  3090  0444  00FA               	line	158
  3091                           	
  3092                           l1132:	
  3093  0445                     ;lcd.c: 156: void lcd_print( unsigned char lin, unsigned char col, const char * str );lc
                                 d.c: 157: {;lcd.c: 158:     char pos = col;
  3094                           	movf	(lcd_print@col),w
  3095  0445  0876               	movwf	(??_lcd_print+0)+0
  3096  0446  00F8               	movf	(??_lcd_print+0)+0,w
  3097  0447  0878               	movwf	(lcd_print@pos)
  3098  0448  00F9               	line	159
  3099                           	
  3100                           l1134:	
  3101  0449                     ;lcd.c: 159:     lcd_lincol( lin, col );
  3102                           	movf	(lcd_print@col),w
  3103  0449  0876               	movwf	(??_lcd_print+0)+0
  3104  044A  00F8               	movf	(??_lcd_print+0)+0,w
  3105  044B  0878               	movwf	(lcd_lincol@col)
  3106  044C  00F3               	movf	(lcd_print@lin),w
  3107  044D  087A               	fcall	_lcd_lincol
  3108  044E  120A  118A  23EE  120A  118A  	line	161
  3109                           ;lcd.c: 161:     while( *str )
  3110                           	goto	l1142
  3111  0453  2C69               	
  3112                           l46:	
  3113  0454                     	line	163
  3114                           	
  3115                           l1136:	
  3116  0454                     ;lcd.c: 162:     {;lcd.c: 163:         lcd_dataReg( *str );
  3117                           	movf	(lcd_print@str),w
  3118  0454  0877               	movwf	fsr0
  3119  0455  0084               	fcall	stringdir
  3120  0456  120A  118A  2003  120A  118A  	fcall	_lcd_dataReg
  3121  045B  120A  118A  24AA  120A  118A  	line	164
  3122                           	
  3123                           l1138:	
  3124  0460                     ;lcd.c: 164:         ++str;
  3125                           	movlw	low(01h)
  3126  0460  3001               	movwf	(??_lcd_print+0)+0
  3127  0461  00F8               	movf	(??_lcd_print+0)+0,w
  3128  0462  0878               	addwf	(lcd_print@str),f
  3129  0463  07F7               	line	165
  3130                           	
  3131                           l1140:	
  3132  0464                     ;lcd.c: 165:         ++pos;
  3133                           	movlw	low(01h)
  3134  0464  3001               	movwf	(??_lcd_print+0)+0
  3135  0465  00F8               	movf	(??_lcd_print+0)+0,w
  3136  0466  0878               	addwf	(lcd_print@pos),f
  3137  0467  07F9               	goto	l1142
  3138  0468  2C69               	line	166
  3139                           ;lcd.c: 166:     }
  3140                           	
  3141                           l45:	
  3142  0469                     	line	161
  3143                           	
  3144                           l1142:	
  3145  0469                     ;lcd.c: 161:     while( *str )
  3146                           	movf	(lcd_print@str),w
  3147  0469  0877               	movwf	fsr0
  3148  046A  0084               	fcall	stringdir
  3149  046B  120A  118A  2003  120A  118A  	xorlw	0
  3150  0470  3A00               	skipz
  3151  0471  1D03               	goto	u851
  3152  0472  2C74               	goto	u850
  3153  0473  2C75               u851:
  3154  0474                     	goto	l1136
  3155  0474  2C54               u850:
  3156  0475                     	goto	l48
  3157  0475  2C76               	
  3158                           l47:	
  3159  0476                     	line	167
  3160                           	
  3161                           l48:	
  3162  0476                     	return
  3163  0476  0008               	opt stack 0
  3164                           GLOBAL	__end_of_lcd_print
  3165                           	__end_of_lcd_print:
  3166  0477                     	signat	_lcd_print,12409
  3167                           	global	_lcd_lincol
  3168                           
  3169 ;; *************** function _lcd_lincol *****************
  3170 ;; Defined at:
  3171 ;;		line 111 in file "lcd.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  lin             1    wreg     unsigned char 
  3174 ;;  col             1    3[COMMON] unsigned char 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  lin             1    5[COMMON] unsigned char 
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      void 
  3179 ;; Registers used:
  3180 ;;		wreg, status,2, status,0, pclath, cstack
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3186 ;;      Params:         1       0       0       0       0
  3187 ;;      Locals:         1       0       0       0       0
  3188 ;;      Temps:          1       0       0       0       0
  3189 ;;      Totals:         3       0       0       0       0
  3190 ;;Total ram usage:        3 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:    1
  3193 ;; This function calls:
  3194 ;;		_lcd_instReg
  3195 ;; This function is called by:
  3196 ;;		_lcd_print
  3197 ;;		_lcd_num
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3201                           	line	111
  3202                           global __ptext9
  3203                           __ptext9:	;psect for function _lcd_lincol
  3204  03EE                     psect	text9
  3205                           	file	"lcd.c"
  3206                           	line	111
  3207                           	global	__size_of_lcd_lincol
  3208                           	__size_of_lcd_lincol	equ	__end_of_lcd_lincol-_lcd_lincol
  3209  0013                     	
  3210                           _lcd_lincol:	
  3211  03EE                     ;incstack = 0
  3212                           	opt	stack 5
  3213                           ; Regs used in _lcd_lincol: [wreg+status,2+status,0+pclath+cstack]
  3214                           ;lcd_lincol@lin stored from wreg
  3215                           	movwf	(lcd_lincol@lin)
  3216  03EE  00F5               	line	113
  3217                           	
  3218                           l1062:	
  3219  03EF                     ;lcd.c: 111: void lcd_lincol( unsigned char lin, unsigned char col);lcd.c: 112: {;lcd.c:
                                  113:     lcd_instReg( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  3220                           	movf	(lcd_lincol@lin),w
  3221  03EF  0875               	movwf	(??_lcd_lincol+0)+0
  3222  03F0  00F4               	movlw	06h
  3223  03F1  3006               u705:
  3224  03F2                     	clrc
  3225  03F2  1003               	rlf	(??_lcd_lincol+0)+0,f
  3226  03F3  0DF4               	addlw	-1
  3227  03F4  3EFF               	skipz
  3228  03F5  1D03               	goto	u705
  3229  03F6  2BF2               	movf	(lcd_lincol@col),w
  3230  03F7  0873               	addwf	0+(??_lcd_lincol+0)+0,w
  3231  03F8  0774               	andlw	07Fh
  3232  03F9  397F               	addlw	080h
  3233  03FA  3E80               	fcall	_lcd_instReg
  3234  03FB  120A  118A  26A8  120A  118A  	line	114
  3235                           	
  3236                           l36:	
  3237  0400                     	return
  3238  0400  0008               	opt stack 0
  3239                           GLOBAL	__end_of_lcd_lincol
  3240                           	__end_of_lcd_lincol:
  3241  0401                     	signat	_lcd_lincol,8313
  3242                           	global	_lcd_dataReg
  3243                           
  3244 ;; *************** function _lcd_dataReg *****************
  3245 ;; Defined at:
  3246 ;;		line 93 in file "lcd.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;  d               1    wreg     unsigned char 
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;  d               1    2[COMMON] unsigned char 
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  1    wreg      void 
  3253 ;; Registers used:
  3254 ;;		wreg, status,2, status,0
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3260 ;;      Params:         0       0       0       0       0
  3261 ;;      Locals:         1       0       0       0       0
  3262 ;;      Temps:          2       0       0       0       0
  3263 ;;      Totals:         3       0       0       0       0
  3264 ;;Total ram usage:        3 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_lcd_print
  3270 ;;		_lcd_num
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3274                           	line	93
  3275                           global __ptext10
  3276                           __ptext10:	;psect for function _lcd_dataReg
  3277  04AA                     psect	text10
  3278                           	file	"lcd.c"
  3279                           	line	93
  3280                           	global	__size_of_lcd_dataReg
  3281                           	__size_of_lcd_dataReg	equ	__end_of_lcd_dataReg-_lcd_dataReg
  3282  0036                     	
  3283                           _lcd_dataReg:	
  3284  04AA                     ;incstack = 0
  3285                           	opt	stack 6
  3286                           ; Regs used in _lcd_dataReg: [wreg+status,2+status,0]
  3287                           ;lcd_dataReg@d stored from wreg
  3288                           	movwf	(lcd_dataReg@d)
  3289  04AA  00F2               	line	95
  3290                           	
  3291                           l1044:	
  3292  04AB                     ;lcd.c: 93: void lcd_dataReg( unsigned char d );lcd.c: 94: {;lcd.c: 95:     PORTDbits.RD
                                 2 = 1;
  3293                           	bcf	status, 5	;RP0=0, select bank0
  3294  04AB  1283               	bcf	status, 6	;RP1=0, select bank0
  3295  04AC  1303               	bsf	(8),2	;volatile
  3296  04AD  1508               	line	96
  3297                           	
  3298                           l1046:	
  3299  04AE                     ;lcd.c: 96:     PORTD = ((PORTD & 0x0F)|(d >> 4<<4));
  3300                           	movf	(lcd_dataReg@d),w
  3301  04AE  0872               	movwf	(??_lcd_dataReg+0)+0
  3302  04AF  00F0               	movlw	04h
  3303  04B0  3004               u675:
  3304  04B1                     	clrc
  3305  04B1  1003               	rrf	(??_lcd_dataReg+0)+0,f
  3306  04B2  0CF0               	addlw	-1
  3307  04B3  3EFF               	skipz
  3308  04B4  1D03               	goto	u675
  3309  04B5  2CB1               	movf	0+(??_lcd_dataReg+0)+0,w
  3310  04B6  0870               	movwf	(??_lcd_dataReg+1)+0
  3311  04B7  00F1               	movlw	04h
  3312  04B8  3004               u685:
  3313  04B9                     	clrc
  3314  04B9  1003               	rlf	(??_lcd_dataReg+1)+0,f
  3315  04BA  0DF1               	addlw	-1
  3316  04BB  3EFF               	skipz
  3317  04BC  1D03               	goto	u685
  3318  04BD  2CB9               	movf	(8),w	;volatile
  3319  04BE  0808               	andlw	0Fh
  3320  04BF  390F               	iorwf	0+(??_lcd_dataReg+1)+0,w
  3321  04C0  0471               	movwf	(8)	;volatile
  3322  04C1  0088               	line	97
  3323                           	
  3324                           l1048:	
  3325  04C2                     ;lcd.c: 97:     PORTDbits.RD3 = 0;
  3326                           	bcf	(8),3	;volatile
  3327  04C2  1188               	line	98
  3328                           	
  3329                           l1050:	
  3330  04C3                     ;lcd.c: 98:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3331                           	opt asmopt_push
  3332                           opt asmopt_off
  3333                           	movlw	13
  3334  04C3  300D               movwf	((??_lcd_dataReg+0)+0),f
  3335  04C4  00F0               	u1117:
  3336  04C5                     decfsz	(??_lcd_dataReg+0)+0,f
  3337  04C5  0BF0               	goto	u1117
  3338  04C6  2CC5               opt asmopt_pop
  3339                           
  3340                           	line	99
  3341                           	
  3342                           l1052:	
  3343  04C7                     ;lcd.c: 99:     PORTDbits.RD3 = 1;
  3344                           	bcf	status, 5	;RP0=0, select bank0
  3345  04C7  1283               	bcf	status, 6	;RP1=0, select bank0
  3346  04C8  1303               	bsf	(8),3	;volatile
  3347  04C9  1588               	line	101
  3348                           	
  3349                           l1054:	
  3350  04CA                     ;lcd.c: 101:     PORTDbits.RD2 = 1;
  3351                           	bsf	(8),2	;volatile
  3352  04CA  1508               	line	102
  3353                           	
  3354                           l1056:	
  3355  04CB                     ;lcd.c: 102:     PORTD = ((PORTD & 0x0F)|(d<<4));
  3356                           	movf	(lcd_dataReg@d),w
  3357  04CB  0872               	movwf	(??_lcd_dataReg+0)+0
  3358  04CC  00F0               	movlw	04h
  3359  04CD  3004               u695:
  3360  04CE                     	clrc
  3361  04CE  1003               	rlf	(??_lcd_dataReg+0)+0,f
  3362  04CF  0DF0               	addlw	-1
  3363  04D0  3EFF               	skipz
  3364  04D1  1D03               	goto	u695
  3365  04D2  2CCE               	movf	(8),w	;volatile
  3366  04D3  0808               	andlw	0Fh
  3367  04D4  390F               	iorwf	0+(??_lcd_dataReg+0)+0,w
  3368  04D5  0470               	movwf	(8)	;volatile
  3369  04D6  0088               	line	103
  3370                           	
  3371                           l1058:	
  3372  04D7                     ;lcd.c: 103:     PORTDbits.RD3 = 0;
  3373                           	bcf	(8),3	;volatile
  3374  04D7  1188               	line	104
  3375                           ;lcd.c: 104:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  3376                           	opt asmopt_push
  3377                           opt asmopt_off
  3378                           	movlw	13
  3379  04D8  300D               movwf	((??_lcd_dataReg+0)+0),f
  3380  04D9  00F0               	u1127:
  3381  04DA                     decfsz	(??_lcd_dataReg+0)+0,f
  3382  04DA  0BF0               	goto	u1127
  3383  04DB  2CDA               opt asmopt_pop
  3384                           
  3385                           	line	105
  3386                           	
  3387                           l1060:	
  3388  04DC                     ;lcd.c: 105:     PORTDbits.RD3 = 1;
  3389                           	bcf	status, 5	;RP0=0, select bank0
  3390  04DC  1283               	bcf	status, 6	;RP1=0, select bank0
  3391  04DD  1303               	bsf	(8),3	;volatile
  3392  04DE  1588               	line	106
  3393                           	
  3394                           l33:	
  3395  04DF                     	return
  3396  04DF  0008               	opt stack 0
  3397                           GLOBAL	__end_of_lcd_dataReg
  3398                           	__end_of_lcd_dataReg:
  3399  04E0                     	signat	_lcd_dataReg,4217
  3400                           	global	_lcd_init
  3401                           
  3402 ;; *************** function _lcd_init *****************
  3403 ;; Defined at:
  3404 ;;		line 121 in file "lcd.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;		None
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;		None
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      void 
  3411 ;; Registers used:
  3412 ;;		wreg, status,2, status,0, pclath, cstack
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3418 ;;      Params:         0       0       0       0       0
  3419 ;;      Locals:         0       0       0       0       0
  3420 ;;      Temps:          0       0       0       0       0
  3421 ;;      Totals:         0       0       0       0       0
  3422 ;;Total ram usage:        0 bytes
  3423 ;; Hardware stack levels used:    1
  3424 ;; Hardware stack levels required when called:    1
  3425 ;; This function calls:
  3426 ;;		_delay
  3427 ;;		_lcd_instReg
  3428 ;; This function is called by:
  3429 ;;		_main
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3433                           	line	121
  3434                           global __ptext11
  3435                           __ptext11:	;psect for function _lcd_init
  3436  04E0                     psect	text11
  3437                           	file	"lcd.c"
  3438                           	line	121
  3439                           	global	__size_of_lcd_init
  3440                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  3441  003F                     	
  3442                           _lcd_init:	
  3443  04E0                     ;incstack = 0
  3444                           	opt	stack 6
  3445                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3446                           	line	123
  3447                           	
  3448                           l1116:	
  3449  04E0                     ;lcd.c: 123:     delay(100);
  3450                           	movlw	064h
  3451  04E0  3064               	movwf	(delay@t)
  3452  04E1  00F0               	movlw	0
  3453  04E2  3000               	movwf	((delay@t))+1
  3454  04E3  00F1               	fcall	_delay
  3455  04E4  120A  118A  2414  120A  118A  	line	124
  3456                           	
  3457                           l1118:	
  3458  04E9                     ;lcd.c: 124:     TRISDbits.TRISD2 = 0;
  3459                           	bsf	status, 5	;RP0=1, select bank1
  3460  04E9  1683               	bcf	status, 6	;RP1=0, select bank1
  3461  04EA  1303               	bcf	(136)^080h,2	;volatile
  3462  04EB  1108               	line	125
  3463                           	
  3464                           l1120:	
  3465  04EC                     ;lcd.c: 125:     TRISDbits.TRISD3 = 0;
  3466                           	bcf	(136)^080h,3	;volatile
  3467  04EC  1188               	line	126
  3468                           	
  3469                           l1122:	
  3470  04ED                     ;lcd.c: 126:     TRISDbits.TRISD4 = 0;
  3471                           	bcf	(136)^080h,4	;volatile
  3472  04ED  1208               	line	127
  3473                           	
  3474                           l1124:	
  3475  04EE                     ;lcd.c: 127:     TRISDbits.TRISD5 = 0;
  3476                           	bcf	(136)^080h,5	;volatile
  3477  04EE  1288               	line	128
  3478                           	
  3479                           l1126:	
  3480  04EF                     ;lcd.c: 128:     TRISDbits.TRISD6 = 0;
  3481                           	bcf	(136)^080h,6	;volatile
  3482  04EF  1308               	line	129
  3483                           	
  3484                           l1128:	
  3485  04F0                     ;lcd.c: 129:     TRISDbits.TRISD7 = 0;
  3486                           	bcf	(136)^080h,7	;volatile
  3487  04F0  1388               	line	131
  3488                           ;lcd.c: 131:     delay(100);
  3489                           	movlw	064h
  3490  04F1  3064               	movwf	(delay@t)
  3491  04F2  00F0               	movlw	0
  3492  04F3  3000               	movwf	((delay@t))+1
  3493  04F4  00F1               	fcall	_delay
  3494  04F5  120A  118A  2414  120A  118A  	line	132
  3495                           	
  3496                           l1130:	
  3497  04FA                     ;lcd.c: 132:     PORTDbits.RD3 = 1;
  3498                           	bcf	status, 5	;RP0=0, select bank0
  3499  04FA  1283               	bcf	status, 6	;RP1=0, select bank0
  3500  04FB  1303               	bsf	(8),3	;volatile
  3501  04FC  1588               	line	133
  3502                           ;lcd.c: 133:     lcd_instReg( 0x20|0x00|0x08 );
  3503                           	movlw	low(028h)
  3504  04FD  3028               	fcall	_lcd_instReg
  3505  04FE  120A  118A  26A8  120A  118A  	line	134
  3506                           ;lcd.c: 134:     lcd_instReg( 0x08|0x04|0x00|0x00 );
  3507                           	movlw	low(0Ch)
  3508  0503  300C               	fcall	_lcd_instReg
  3509  0504  120A  118A  26A8  120A  118A  	line	135
  3510                           ;lcd.c: 135:     lcd_instReg( 0x01 );
  3511                           	movlw	low(01h)
  3512  0509  3001               	fcall	_lcd_instReg
  3513  050A  120A  118A  26A8  120A  118A  	line	136
  3514                           ;lcd.c: 136:     lcd_instReg( 0x02 );
  3515                           	movlw	low(02h)
  3516  050F  3002               	fcall	_lcd_instReg
  3517  0510  120A  118A  26A8  120A  118A  	line	137
  3518                           ;lcd.c: 137:     delay(100);
  3519                           	movlw	064h
  3520  0515  3064               	movwf	(delay@t)
  3521  0516  00F0               	movlw	0
  3522  0517  3000               	movwf	((delay@t))+1
  3523  0518  00F1               	fcall	_delay
  3524  0519  120A  118A  2414  120A  118A  	line	138
  3525                           	
  3526                           l39:	
  3527  051E                     	return
  3528  051E  0008               	opt stack 0
  3529                           GLOBAL	__end_of_lcd_init
  3530                           	__end_of_lcd_init:
  3531  051F                     	signat	_lcd_init,89
  3532                           	global	_lcd_instReg
  3533                           
  3534 ;; *************** function _lcd_instReg *****************
  3535 ;; Defined at:
  3536 ;;		line 58 in file "lcd.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  i               1    wreg     unsigned char 
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;  i               1    2[COMMON] unsigned char 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  1    wreg      void 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2, status,0
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3550 ;;      Params:         0       0       0       0       0
  3551 ;;      Locals:         1       0       0       0       0
  3552 ;;      Temps:          2       0       0       0       0
  3553 ;;      Totals:         3       0       0       0       0
  3554 ;;Total ram usage:        3 bytes
  3555 ;; Hardware stack levels used:    1
  3556 ;; This function calls:
  3557 ;;		Nothing
  3558 ;; This function is called by:
  3559 ;;		_lcd_lincol
  3560 ;;		_lcd_init
  3561 ;;		_lcd_clr
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3565                           	line	58
  3566                           global __ptext12
  3567                           __ptext12:	;psect for function _lcd_instReg
  3568  06A8                     psect	text12
  3569                           	file	"lcd.c"
  3570                           	line	58
  3571                           	global	__size_of_lcd_instReg
  3572                           	__size_of_lcd_instReg	equ	__end_of_lcd_instReg-_lcd_instReg
  3573  008B                     	
  3574                           _lcd_instReg:	
  3575  06A8                     ;incstack = 0
  3576                           	opt	stack 5
  3577                           ; Regs used in _lcd_instReg: [wreg+status,2+status,0]
  3578                           ;lcd_instReg@i stored from wreg
  3579                           	movwf	(lcd_instReg@i)
  3580  06A8  00F2               	line	60
  3581                           	
  3582                           l996:	
  3583  06A9                     ;lcd.c: 58: void lcd_instReg( unsigned char i );lcd.c: 59: {;lcd.c: 60:     PORTDbits.RD
                                 2 = 0;
  3584                           	bcf	status, 5	;RP0=0, select bank0
  3585  06A9  1283               	bcf	status, 6	;RP1=0, select bank0
  3586  06AA  1303               	bcf	(8),2	;volatile
  3587  06AB  1108               	line	61
  3588                           	
  3589                           l998:	
  3590  06AC                     ;lcd.c: 61:     PORTD = ((PORTD & 0x0F)|(i>>4<<4));
  3591                           	movf	(lcd_instReg@i),w
  3592  06AC  0872               	movwf	(??_lcd_instReg+0)+0
  3593  06AD  00F0               	movlw	04h
  3594  06AE  3004               u565:
  3595  06AF                     	clrc
  3596  06AF  1003               	rrf	(??_lcd_instReg+0)+0,f
  3597  06B0  0CF0               	addlw	-1
  3598  06B1  3EFF               	skipz
  3599  06B2  1D03               	goto	u565
  3600  06B3  2EAF               	movf	0+(??_lcd_instReg+0)+0,w
  3601  06B4  0870               	movwf	(??_lcd_instReg+1)+0
  3602  06B5  00F1               	movlw	04h
  3603  06B6  3004               u575:
  3604  06B7                     	clrc
  3605  06B7  1003               	rlf	(??_lcd_instReg+1)+0,f
  3606  06B8  0DF1               	addlw	-1
  3607  06B9  3EFF               	skipz
  3608  06BA  1D03               	goto	u575
  3609  06BB  2EB7               	movf	(8),w	;volatile
  3610  06BC  0808               	andlw	0Fh
  3611  06BD  390F               	iorwf	0+(??_lcd_instReg+1)+0,w
  3612  06BE  0471               	movwf	(8)	;volatile
  3613  06BF  0088               	line	63
  3614                           	
  3615                           l1000:	
  3616  06C0                     ;lcd.c: 63:     PORTDbits.RD3 = 0;
  3617                           	bcf	(8),3	;volatile
  3618  06C0  1188               	line	64
  3619                           ;lcd.c: 64:     if( i == 0x01 || i == 0x02 )
  3620                           		decf	((lcd_instReg@i)),w
  3621  06C1  0372               	btfsc	status,2
  3622  06C2  1903               	goto	u581
  3623  06C3  2EC5               	goto	u580
  3624  06C4  2EC6               u581:
  3625  06C5                     	goto	l1004
  3626  06C5  2ECD               u580:
  3627  06C6                     	
  3628                           l1002:	
  3629  06C6                     		movlw	2
  3630  06C6  3002               	xorwf	((lcd_instReg@i)),w
  3631  06C7  0672               	btfss	status,2
  3632  06C8  1D03               	goto	u591
  3633  06C9  2ECB               	goto	u590
  3634  06CA  2ECC               u591:
  3635  06CB                     	goto	l1006
  3636  06CB  2ED7               u590:
  3637  06CC                     	goto	l1004
  3638  06CC  2ECD               	
  3639                           l23:	
  3640  06CD                     	line	65
  3641                           	
  3642                           l1004:	
  3643  06CD                     ;lcd.c: 65:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3644                           	opt asmopt_push
  3645                           opt asmopt_off
  3646                           movlw	3
  3647  06CD  3003               movwf	((??_lcd_instReg+0)+0+1),f
  3648  06CE  00F1               	movlw	151
  3649  06CF  3097               movwf	((??_lcd_instReg+0)+0),f
  3650  06D0  00F0               	u1137:
  3651  06D1                     decfsz	((??_lcd_instReg+0)+0),f
  3652  06D1  0BF0               	goto	u1137
  3653  06D2  2ED1               	decfsz	((??_lcd_instReg+0)+0+1),f
  3654  06D3  0BF1               	goto	u1137
  3655  06D4  2ED1               	nop2
  3656  06D5  2ED6               opt asmopt_pop
  3657                           
  3658                           	goto	l1008
  3659  06D6  2EDC               	line	66
  3660                           ;lcd.c: 66:     else
  3661                           	
  3662                           l21:	
  3663  06D7                     	line	67
  3664                           	
  3665                           l1006:	
  3666  06D7                     ;lcd.c: 67:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3667                           	opt asmopt_push
  3668                           opt asmopt_off
  3669                           	movlw	13
  3670  06D7  300D               movwf	((??_lcd_instReg+0)+0),f
  3671  06D8  00F0               	u1147:
  3672  06D9                     decfsz	(??_lcd_instReg+0)+0,f
  3673  06D9  0BF0               	goto	u1147
  3674  06DA  2ED9               opt asmopt_pop
  3675                           
  3676                           	goto	l1008
  3677  06DB  2EDC               	
  3678                           l24:	
  3679  06DC                     	line	68
  3680                           	
  3681                           l1008:	
  3682  06DC                     ;lcd.c: 68:     PORTDbits.RD3 = 1;
  3683                           	bcf	status, 5	;RP0=0, select bank0
  3684  06DC  1283               	bcf	status, 6	;RP1=0, select bank0
  3685  06DD  1303               	bsf	(8),3	;volatile
  3686  06DE  1588               	line	71
  3687                           	
  3688                           l1010:	
  3689  06DF                     ;lcd.c: 71:     if( (i & 0xF0) == (0x20 | 0x00) )
  3690                           	movlw	low(0F0h)
  3691  06DF  30F0               	andwf	(lcd_instReg@i),w
  3692  06E0  0572               	movwf	(??_lcd_instReg+0)+0
  3693  06E1  00F0               		movlw	32
  3694  06E2  3020               	xorwf	((??_lcd_instReg+0)+0),w
  3695  06E3  0670               	btfss	status,2
  3696  06E4  1D03               	goto	u601
  3697  06E5  2EE7               	goto	u600
  3698  06E6  2EE8               u601:
  3699  06E7                     	goto	l1022
  3700  06E7  2F06               u600:
  3701  06E8                     	line	73
  3702                           	
  3703                           l1012:	
  3704  06E8                     ;lcd.c: 72:     {;lcd.c: 73:         PORTDbits.RD2 = 0;
  3705                           	bcf	(8),2	;volatile
  3706  06E8  1108               	line	74
  3707                           	
  3708                           l1014:	
  3709  06E9                     ;lcd.c: 74:         PORTD = ((PORTD & 0x0F)|(i>>4<<4));
  3710                           	movf	(lcd_instReg@i),w
  3711  06E9  0872               	movwf	(??_lcd_instReg+0)+0
  3712  06EA  00F0               	movlw	04h
  3713  06EB  3004               u615:
  3714  06EC                     	clrc
  3715  06EC  1003               	rrf	(??_lcd_instReg+0)+0,f
  3716  06ED  0CF0               	addlw	-1
  3717  06EE  3EFF               	skipz
  3718  06EF  1D03               	goto	u615
  3719  06F0  2EEC               	movf	0+(??_lcd_instReg+0)+0,w
  3720  06F1  0870               	movwf	(??_lcd_instReg+1)+0
  3721  06F2  00F1               	movlw	04h
  3722  06F3  3004               u625:
  3723  06F4                     	clrc
  3724  06F4  1003               	rlf	(??_lcd_instReg+1)+0,f
  3725  06F5  0DF1               	addlw	-1
  3726  06F6  3EFF               	skipz
  3727  06F7  1D03               	goto	u625
  3728  06F8  2EF4               	movf	(8),w	;volatile
  3729  06F9  0808               	andlw	0Fh
  3730  06FA  390F               	iorwf	0+(??_lcd_instReg+1)+0,w
  3731  06FB  0471               	movwf	(8)	;volatile
  3732  06FC  0088               	line	75
  3733                           	
  3734                           l1016:	
  3735  06FD                     ;lcd.c: 75:         PORTDbits.RD3 = 0;
  3736                           	bcf	(8),3	;volatile
  3737  06FD  1188               	line	76
  3738                           	
  3739                           l1018:	
  3740  06FE                     ;lcd.c: 76:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3741                           	opt asmopt_push
  3742                           opt asmopt_off
  3743                           	movlw	13
  3744  06FE  300D               movwf	((??_lcd_instReg+0)+0),f
  3745  06FF  00F0               	u1157:
  3746  0700                     decfsz	(??_lcd_instReg+0)+0,f
  3747  0700  0BF0               	goto	u1157
  3748  0701  2F00               opt asmopt_pop
  3749                           
  3750                           	line	77
  3751                           	
  3752                           l1020:	
  3753  0702                     ;lcd.c: 77:         PORTDbits.RD3 = 1;
  3754                           	bcf	status, 5	;RP0=0, select bank0
  3755  0702  1283               	bcf	status, 6	;RP1=0, select bank0
  3756  0703  1303               	bsf	(8),3	;volatile
  3757  0704  1588               	goto	l1022
  3758  0705  2F06               	line	78
  3759                           ;lcd.c: 78:     }
  3760                           	
  3761                           l25:	
  3762  0706                     	line	80
  3763                           	
  3764                           l1022:	
  3765  0706                     ;lcd.c: 80:     PORTDbits.RD2 = 0;
  3766                           	bcf	(8),2	;volatile
  3767  0706  1108               	line	81
  3768                           	
  3769                           l1024:	
  3770  0707                     ;lcd.c: 81:     PORTD = ((PORTD & 0x0F)|(i<<4));
  3771                           	movf	(lcd_instReg@i),w
  3772  0707  0872               	movwf	(??_lcd_instReg+0)+0
  3773  0708  00F0               	movlw	04h
  3774  0709  3004               u635:
  3775  070A                     	clrc
  3776  070A  1003               	rlf	(??_lcd_instReg+0)+0,f
  3777  070B  0DF0               	addlw	-1
  3778  070C  3EFF               	skipz
  3779  070D  1D03               	goto	u635
  3780  070E  2F0A               	movf	(8),w	;volatile
  3781  070F  0808               	andlw	0Fh
  3782  0710  390F               	iorwf	0+(??_lcd_instReg+0)+0,w
  3783  0711  0470               	movwf	(8)	;volatile
  3784  0712  0088               	line	82
  3785                           	
  3786                           l1026:	
  3787  0713                     ;lcd.c: 82:     PORTDbits.RD3 = 0;
  3788                           	bcf	(8),3	;volatile
  3789  0713  1188               	line	83
  3790                           	
  3791                           l1028:	
  3792  0714                     ;lcd.c: 83:     if( i == 0x01 || i == 0x02 )
  3793                           		decf	((lcd_instReg@i)),w
  3794  0714  0372               	btfsc	status,2
  3795  0715  1903               	goto	u641
  3796  0716  2F18               	goto	u640
  3797  0717  2F19               u641:
  3798  0718                     	goto	l1032
  3799  0718  2F20               u640:
  3800  0719                     	
  3801                           l1030:	
  3802  0719                     		movlw	2
  3803  0719  3002               	xorwf	((lcd_instReg@i)),w
  3804  071A  0672               	btfss	status,2
  3805  071B  1D03               	goto	u651
  3806  071C  2F1E               	goto	u650
  3807  071D  2F1F               u651:
  3808  071E                     	goto	l1034
  3809  071E  2F2A               u650:
  3810  071F                     	goto	l1032
  3811  071F  2F20               	
  3812                           l28:	
  3813  0720                     	line	84
  3814                           	
  3815                           l1032:	
  3816  0720                     ;lcd.c: 84:         _delay((unsigned long)((2)*(4000000/4000.0)));
  3817                           	opt asmopt_push
  3818                           opt asmopt_off
  3819                           movlw	3
  3820  0720  3003               movwf	((??_lcd_instReg+0)+0+1),f
  3821  0721  00F1               	movlw	151
  3822  0722  3097               movwf	((??_lcd_instReg+0)+0),f
  3823  0723  00F0               	u1167:
  3824  0724                     decfsz	((??_lcd_instReg+0)+0),f
  3825  0724  0BF0               	goto	u1167
  3826  0725  2F24               	decfsz	((??_lcd_instReg+0)+0+1),f
  3827  0726  0BF1               	goto	u1167
  3828  0727  2F24               	nop2
  3829  0728  2F29               opt asmopt_pop
  3830                           
  3831                           	goto	l1036
  3832  0729  2F2F               	line	85
  3833                           ;lcd.c: 85:     else
  3834                           	
  3835                           l26:	
  3836  072A                     	line	86
  3837                           	
  3838                           l1034:	
  3839  072A                     ;lcd.c: 86:         _delay((unsigned long)((40)*(4000000/4000000.0)));
  3840                           	opt asmopt_push
  3841                           opt asmopt_off
  3842                           	movlw	13
  3843  072A  300D               movwf	((??_lcd_instReg+0)+0),f
  3844  072B  00F0               	u1177:
  3845  072C                     decfsz	(??_lcd_instReg+0)+0,f
  3846  072C  0BF0               	goto	u1177
  3847  072D  2F2C               opt asmopt_pop
  3848                           
  3849                           	goto	l1036
  3850  072E  2F2F               	
  3851                           l29:	
  3852  072F                     	line	87
  3853                           	
  3854                           l1036:	
  3855  072F                     ;lcd.c: 87:     PORTDbits.RD3 = 1;
  3856                           	bcf	status, 5	;RP0=0, select bank0
  3857  072F  1283               	bcf	status, 6	;RP1=0, select bank0
  3858  0730  1303               	bsf	(8),3	;volatile
  3859  0731  1588               	line	88
  3860                           	
  3861                           l30:	
  3862  0732                     	return
  3863  0732  0008               	opt stack 0
  3864                           GLOBAL	__end_of_lcd_instReg
  3865                           	__end_of_lcd_instReg:
  3866  0733                     	signat	_lcd_instReg,4217
  3867                           	global	_delay
  3868                           
  3869 ;; *************** function _delay *****************
  3870 ;; Defined at:
  3871 ;;		line 12 in file "delay.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;  t               2    0[COMMON] unsigned int 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;		None
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      void 
  3878 ;; Registers used:
  3879 ;;		wreg, status,2, status,0
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3885 ;;      Params:         2       0       0       0       0
  3886 ;;      Locals:         0       0       0       0       0
  3887 ;;      Temps:          1       0       0       0       0
  3888 ;;      Totals:         3       0       0       0       0
  3889 ;;Total ram usage:        3 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; This function calls:
  3892 ;;		Nothing
  3893 ;; This function is called by:
  3894 ;;		_lcd_init
  3895 ;;		_stepmotor
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  3899                           	file	"delay.c"
  3900                           	line	12
  3901                           global __ptext13
  3902                           __ptext13:	;psect for function _delay
  3903  0414                     psect	text13
  3904                           	file	"delay.c"
  3905                           	line	12
  3906                           	global	__size_of_delay
  3907                           	__size_of_delay	equ	__end_of_delay-_delay
  3908  0017                     	
  3909                           _delay:	
  3910  0414                     ;incstack = 0
  3911                           	opt	stack 6
  3912                           ; Regs used in _delay: [wreg+status,2+status,0]
  3913                           	line	14
  3914                           	
  3915                           l1038:	
  3916  0414                     ;delay.c: 12: void delay( unsigned int t );delay.c: 13: {;delay.c: 14:     while( t )
  3917                           	goto	l1042
  3918  0414  2C23               	
  3919                           l6:	
  3920  0415                     	line	16
  3921                           	
  3922                           l1040:	
  3923  0415                     ;delay.c: 15:     {;delay.c: 16:         _delay((unsigned long)((1)*(4000000/4000.0)));

  3924                           	opt asmopt_push
  3925                           opt asmopt_off
  3926                           	movlw	199
  3927  0415  30C7               movwf	((??_delay+0)+0),f
  3928  0416  00F2               	u1187:
  3929  0417                     	nop2
  3930  0417  2C18               decfsz	(??_delay+0)+0,f
  3931  0418  0BF2               	goto	u1187
  3932  0419  2C17               	nop2
  3933  041A  2C1B               	nop2
  3934  041B  2C1C               opt asmopt_pop
  3935                           
  3936                           	line	17
  3937                           ;delay.c: 17:         --t;
  3938                           	movlw	01h
  3939  041C  3001               	subwf	(delay@t),f
  3940  041D  02F0               	movlw	0
  3941  041E  3000               	skipc
  3942  041F  1C03               	decf	(delay@t+1),f
  3943  0420  03F1               	subwf	(delay@t+1),f
  3944  0421  02F1               	goto	l1042
  3945  0422  2C23               	line	18
  3946                           ;delay.c: 18:     }
  3947                           	
  3948                           l5:	
  3949  0423                     	line	14
  3950                           	
  3951                           l1042:	
  3952  0423                     ;delay.c: 14:     while( t )
  3953                           	movf	((delay@t)),w
  3954  0423  0870               iorwf	((delay@t+1)),w
  3955  0424  0471               	btfss	status,2
  3956  0425  1D03               	goto	u661
  3957  0426  2C28               	goto	u660
  3958  0427  2C29               u661:
  3959  0428                     	goto	l1040
  3960  0428  2C15               u660:
  3961  0429                     	goto	l8
  3962  0429  2C2A               	
  3963                           l7:	
  3964  042A                     	line	19
  3965                           	
  3966                           l8:	
  3967  042A                     	return
  3968  042A  0008               	opt stack 0
  3969                           GLOBAL	__end_of_delay
  3970                           	__end_of_delay:
  3971  042B                     	signat	_delay,4217
  3972                           global	___latbits
  3973                           ___latbits	equ	2
  3974  0002                     	global	btemp
  3975                           	btemp set 07Eh
  3976  007E                     
  3977                           	DABS	1,126,2	;btemp
  3978                           	global	wtemp0
  3979                           	wtemp0 set btemp+0
  3980  007E                     	end


Data Sizes:
    Strings     30
    Constant    16
    Data        8
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     29      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_print@str	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_2(CODE[14]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _stepmotor->___lldiv
    ___lldiv->___lmul
    _lcd_print->_lcd_lincol
    _lcd_lincol->_lcd_instReg
    _lcd_init->_delay
    _lcd_init->_lcd_instReg

Critical Paths under _main in BANK0

    _main->_stepmotor
    _stepmotor->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3296
                                             27 BANK0      2     2      0
                           _lcd_init
                          _lcd_print
                          _stepmotor
                     _stepmotor_init
                            _teclado
                       _teclado_init
 ---------------------------------------------------------------------------------
 (1) _teclado_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _teclado                                             10    10      0     204
                                              0 COMMON    10    10      0
 ---------------------------------------------------------------------------------
 (1) _stepmotor_init                                       3     1      2      98
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _stepmotor                                           14     5      9    1612
                                             13 BANK0     14     5      9
                             ___bmul
                            ___lldiv
                             ___lmul
                              _delay
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2     833
                                              6 COMMON     5     3      2
                        _lcd_dataReg
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (2) _lcd_lincol                                           3     2      1     372
                                              3 COMMON     3     2      1
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (2) _lcd_dataReg                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     503
                              _delay
                        _lcd_instReg
 ---------------------------------------------------------------------------------
 (3) _lcd_instReg                                          3     3      0     176
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _delay                                                3     1      2     327
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _delay
     _lcd_instReg
   _lcd_print
     _lcd_dataReg
     _lcd_lincol
       _lcd_instReg
   _stepmotor
     ___bmul
     ___lldiv
       ___lmul (ARG)
     ___lmul
     _delay
   _stepmotor_init
   _teclado
   _teclado_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1D      2C       5       55.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      3A      12        0.0%
ABS                  0      0      3A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Apr 06 11:02:36 2022

                               l5 0423                                 l6 0415                                 l7 042A  
                               l8 042A                                 pc 0002                    ___bmul@product 0072  
                     __CFG_CP$OFF 0000                      lcd_dataReg@d 0072                                l21 06D7  
                              l30 0732                                l23 06CD                                l24 06DC  
                              l25 0706                                l33 04DF                                l26 072A  
                              l28 0720                                l36 0400                                l29 072F  
                              l45 0469                                l46 0454                                l39 051E  
                              l47 0476                                l48 0476                                l82 0580  
                              l83 05B3                                l84 05C7                                l85 05C8  
                              l86 05C9                                l87 05C9                                fsr 0004  
                             l100 03ED                               l110 0638                               l105 05D6  
                             l106 0636                               l107 05ED                               l132 0773  
                             l108 062B                               l133 077C                               l109 0620  
                             l134 078C                               l135 07A1                               l136 07DB  
                             l137 07A2                               l129 04A9                               l250 0441  
                             l138 07E6                               l251 0443                               l139 07E6  
                             l260 069D                               l236 0528                               l261 06A7  
                             l237 0544                               l254 069E                               l238 055F  
                             l255 065C                               l239 0568                               l248 042E  
                             l256 064E                               l249 0437                               l257 0661  
                             l258 0662                               l259 068D                               l996 06A9  
                             l998 06AC                               u600 06E8                               u601 06E7  
                    __CFG_CPD$OFF 0000                               u710 052C                               u615 06EC  
                             u711 052B                               u640 0719                               u800 0660  
                             u641 0718                               u625 06F4                               u705 03F2  
                             u801 065F                               u721 0535                               u650 071F  
                             u722 053C                               u651 071E                               u635 070A  
                             u723 0543                               u660 0429                               u580 06C6  
                             u820 067D                               u900 0609                               u661 0428  
                             u581 06C5                               u565 06AF                               u821 067C  
                             u901 0608                               u590 06CC                               u750 055E  
                             u591 06CB                               u575 06B7                               u815 0664  
                             u751 055D                               u735 0546                               u760 0432  
                             u840 069C                               u920 062A                               u761 0431  
                             u841 069B                               u825 0679                               u745 054E  
                             u921 0629                               u850 0475                               u770 0440  
                             u930 0635                               u675 04B1                               u851 0474  
                             u771 043F                               u835 068E                               u931 0634  
                             u915 060C                               u780 064B                               u940 073E  
                             u860 05D4                               u685 04B9                               u781 064A  
                             u941 073D                               u861 05D3                               u950 0781  
                             u695 04CE                               u951 0780                               u880 05EB  
                             u881 05EA                               u970 0791                               u874 05DC  
                             u795 0650                               u971 0790                               u875 05DA  
                             u980 07D1                               u965 0783                               u990 07E5  
                             u894 05FB                               u991 07E4                               u895 05F8  
                             u985 07C4                               u986 07C5                               u987 07CA  
                             u988 07CB                               u989 07D0                               _ppr 0049  
                             fsr0 0004                               indf 0000                      __CFG_LVP$OFF 0000  
                            l1000 06C0                              l1010 06DF                              l1002 06C6  
                            l1020 0702                              l1012 06E8                              l1004 06CD  
                            l1100 0662                              l1030 0719                              l1014 06E9  
                            l1022 0706                              l1006 06D7                              l1110 0696  
                            l1102 066B                              l1040 0415                              l1032 0720  
                            l1024 0707                              l1016 06FD                              l1008 06DC  
                            l1120 04EC                              l1104 067D                              l1112 069E  
                            l1200 0773                              l1042 0423                              l1034 072A  
                            l1026 0713                              l1018 06FE                              l1130 04FA  
                            l1122 04ED                              l1050 04C3                              l1114 06A7  
                            l1106 068B                              l1210 07A2                              l1202 077C  
                            l1036 072F                              l1028 0714                              l1124 04EE  
                            l1116 04E0                              l1060 04DC                              l1052 04C7  
                            l1044 04AB                              l1140 0464                              l1132 0445  
                            l1108 068D                              l1212 07AC                              l1204 0781  
                            l1038 0414                              l1126 04EF                              l1118 04E9  
                            l1054 04CA                              l1046 04AE                              l1062 03EF  
                            l1142 0469                              l1134 0449                              l1070 0544  
                            l1214 07B5                              l1206 078A                              l1150 03E7  
                            l1128 04F0                              l1056 04CB                              l1048 04C2  
                            l1136 0454                              l1080 042E                              l1072 054D  
                            l1064 051F                              l1216 07D1                              l1208 0791  
                            l1160 049C                              l1152 03E9                              l1144 03DD  
                            l1058 04D7                              l1138 0460                              l1090 0443  
                            l1082 0432                              l1074 055F                              l1066 0528  
                            l1218 07DB                              l1162 04A0                              l1154 0477  
                            l1170 05D6                              l1146 03E1                              l1084 0437  
                            l1092 0639                              l1076 0568                              l1068 052C  
                            l1156 048F                              l1180 0609                              l1172 05E4  
                            l1164 05CC                              l1148 03E4                              l1086 0439  
                            l1078 042C                              l1094 064B                              l1158 049B  
                            l1182 0620                              l1174 05E5                              l1190 0636  
                            l1166 05CE                              l1270 0580                              l1262 0569  
                            l1088 0441                              l1096 064E                              l1192 0638  
                            l1184 0624                              l1176 05EC                              l1168 05D5  
                            l1272 058A                              l1264 056C                              l1098 065C  
                            l1194 0733                              l1186 062B                              l1178 05ED  
                            l1274 0590                              l1266 0571                              l1196 0739  
                            l1188 062F                              l1276 05B3                              l1268 0576  
                            l1198 073E                              l1278 05BB                              STR_1 0019  
                            STR_2 0029                              u1100 05BB                              u1101 05BA  
                            u1117 04C5                              u1127 04DA                              u1137 06D1  
                            u1090 0590                              u1147 06D9                              u1091 058F  
                            u1157 0700                              u1167 0724                              u1177 072C  
                            u1187 0417                              _WPUB 0095                      __CFG_WRT$OFF 0000  
                            _main 0569                              btemp 007E                              start 0000  
                   __CFG_IESO$OFF 0000                 ___bmul@multiplier 0073                      lcd_instReg@i 0072  
                           ?_main 0070                     __CFG_WDTE$OFF 0000                   __end_of___lldiv 06A8  
                           _PORTB 0006                             _PORTD 0008                             _TRISB 0086  
           __end_of_tecladoMatriz 0019                   _contador_passos 0045               ___lmul@multiplicand 0074  
                    lcd_print@col 0076                      lcd_print@lin 007A                    __CFG_FCMEN$OFF 0000  
                    lcd_print@pos 0079                      lcd_print@str 0077                             _delay 0414  
                           _passo 004B                             _motor 003D                   __end_of_teclado 0639  
                  __CFG_BOREN$OFF 0000                             pclath 000A                             status 0003  
                           wtemp0 007E                     lcd_lincol@col 0073                     lcd_lincol@lin 0075  
                  __CFG_MCLRE$OFF 0000                   __initialization 07E7                      __end_of_main 05CC  
         __size_of_stepmotor_init 0033                            ??_main 003B                            ?_delay 0070  
                          _ANSELH 0189                    __CFG_PWRTE$OFF 0000              __size_of_lcd_dataReg 0036  
                __end_of_lcd_init 051F                            ___bmul 042B                            ___lmul 051F  
                       ??___lldiv 007D              __size_of_lcd_instReg 008B                            delay@t 0070  
                       ??_teclado 0070           __end_of__initialization 07FC               ___bmul@multiplicand 0070  
                  __pcstackCOMMON 0070                      __pidataBANK0 03D5                     __end_of_delay 042B  
                  _OPTION_REGbits 0081                           ??_delay 0072                __size_of_lcd_print 0033  
                      __pbssBANK0 0045            stepmotor@passo_sentido 003A                     ?_teclado_init 0070  
                      __pmaintext 0569  stepmotor_init@pulsosPorRevolucao 0070                           ?___bmul 0070  
                         ?___lmul 0070                    _stepmotor_init 0477                    ___lmul@product 0079  
                      _lcd_lincol 03EE                         ?_lcd_init 0070                        __stringtab 0003  
              __size_of_stepmotor 00B4         stepmotor@qtd_graus_passos 002D                    ??_teclado_init 0070  
          __end_of_stepmotor_init 04AA                   __size_of___bmul 0019                 __end_of_lcd_print 0477  
                 __size_of___lmul 004A                           ___lldiv 0639                           __ptext1 03DD  
                         __ptext2 05CC                           __ptext3 0477                           __ptext4 0733  
                         __ptext5 051F                           __ptext6 0639                           __ptext7 042B  
                         __ptext8 0444                           __ptext9 03EE                           _teclado 05CC  
                      ??_lcd_init 0073              end_of_initialization 07FC                   ___lldiv@divisor 0020  
                 ___lldiv@counter 002C                   ?_stepmotor_init 0070                 __end_of_stepmotor 07E7  
                       _PORTCbits 0007                         _PORTDbits 0008                         _TRISCbits 0087  
                     ?_lcd_lincol 0073                         _TRISDbits 0088                     ??_lcd_dataReg 0070  
                   ??_lcd_instReg 0070                    __end_of___bmul 0444                    __end_of___lmul 0569  
            __end_of_teclado_init 03EE               start_initialization 07E7                     _tecladoMatriz 0009  
        __CFG_FOSC$INTRC_NOCLKOUT 0000               __end_of_lcd_dataReg 04E0                          ??___bmul 0071  
             __size_of_lcd_lincol 0013                          ??___lmul 0078                        init_fetch0 0401  
                     __pdataBANK0 003D               __end_of_lcd_instReg 0733               stepmotor@meio_passo 0033  
                       ___latbits 0002                     __pcstackBANK0 0020                 __size_of_lcd_init 003F  
                      teclado@aux 0077                          ?___lldiv 0020                         __pstrings 0003  
                       _lcd_print 0444                          ?_teclado 0070                    __size_of_delay 0017  
                     _lcd_dataReg 04AA                  ??_stepmotor_init 0072                       _lcd_instReg 06A8  
           __size_of_teclado_init 0011                        ?_lcd_print 0076                       __stringbase 0008  
                       _stepmotor 0733                         main@tecla 003C                      ??_lcd_lincol 0074  
               ___lmul@multiplier 0070                      _teclado_init 03DD                __end_of_lcd_lincol 0401  
                __size_of___lldiv 006F                __end_of__stringtab 0009                        stepmotor@t 0034  
                      ?_stepmotor 002D                  __size_of_teclado 006D                  stepmotor@sentido 0032  
                        __ptext10 04AA                          __ptext11 04E0                          __ptext12 06A8  
                        __ptext13 0414                 __CFG_BOR4V$BOR40V 0000                  stepmotor@unidade 0031  
                        _lcd_init 04E0                     __size_of_main 0063                       ??_lcd_print 0078  
                        init_ram0 0405                          teclado@c 0079                          teclado@l 0078  
                ___lldiv@dividend 0024                         stringcode 0003                       ??_stepmotor 0036  
                ___lldiv@quotient 0028                          stringdir 0003                          stringtab 0003  
                    ?_lcd_dataReg 0070                      ?_lcd_instReg 0070  
